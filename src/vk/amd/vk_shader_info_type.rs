// Generated by `scripts/generate_vk.js`

use utils::vk_traits::*;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkShaderInfoType {
    Statistics = 0,
    Binary = 1,
    Disassembly = 2,
}

pub type RawVkShaderInfoType = i32;

impl VkWrappedType<RawVkShaderInfoType> for VkShaderInfoType {
    fn vk_to_raw(src: &VkShaderInfoType, dst: &mut RawVkShaderInfoType) {
        *dst = *src as i32
    }
}

impl VkRawType<VkShaderInfoType> for RawVkShaderInfoType {
    fn vk_to_wrapped(src: &RawVkShaderInfoType) -> VkShaderInfoType {
        unsafe {
            *((src as *const i32) as *const VkShaderInfoType)
        }
    }
}

impl Default for VkShaderInfoType {
    fn default() -> VkShaderInfoType {
        VkShaderInfoType::Statistics
    }
}