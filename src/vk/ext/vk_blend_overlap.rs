// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkBlendOverlap = i32;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkBlendOverlap {
    Uncorrelated = 0,
    Disjoint = 1,
    Conjoint = 2,
}

impl VkRawType<VkBlendOverlap> for RawVkBlendOverlap {
    fn vk_to_wrapped(src: &RawVkBlendOverlap) -> VkBlendOverlap {
        unsafe {
            *((src as *const i32) as *const VkBlendOverlap)
        }
    }
}

impl VkWrappedType<RawVkBlendOverlap> for VkBlendOverlap {
    fn vk_to_raw(src: &VkBlendOverlap, dst: &mut RawVkBlendOverlap) {
        *dst = *src as i32
    }
}

pub static STATIC_VK_BLEND_OVERLAP : VkBlendOverlap = VkBlendOverlap::Uncorrelated;

impl VkDefault for VkBlendOverlap {
    fn vk_default() -> VkBlendOverlap {
        STATIC_VK_BLEND_OVERLAP
    }
}