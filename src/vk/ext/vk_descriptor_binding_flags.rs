// Generated by `scripts/generate_vk.js`

use utils::vk_traits::*;

pub type RawVkDescriptorBindingFlags = u32;

#[derive(Debug, Clone, Copy)]
pub struct VkDescriptorBindingFlags {
    pub update_after_bind: bool,
    pub update_unused_while_pending: bool,
    pub partially_bound: bool,
    pub variable_descriptor_count: bool,
}

impl VkRawType<VkDescriptorBindingFlags> for RawVkDescriptorBindingFlags {
    fn vk_to_wrapped(src: &RawVkDescriptorBindingFlags) -> VkDescriptorBindingFlags {
        VkDescriptorBindingFlags {
            update_after_bind: (src & 0x00000001) != 0,
            update_unused_while_pending: (src & 0x00000002) != 0,
            partially_bound: (src & 0x00000004) != 0,
            variable_descriptor_count: (src & 0x00000008) != 0,
        }
    }
}

impl VkWrappedType<RawVkDescriptorBindingFlags> for VkDescriptorBindingFlags {
    fn vk_to_raw(src: &VkDescriptorBindingFlags, dst: &mut RawVkDescriptorBindingFlags) {
        *dst = 0;
        if src.update_after_bind { *dst |= 0x00000001; }
        if src.update_unused_while_pending { *dst |= 0x00000002; }
        if src.partially_bound { *dst |= 0x00000004; }
        if src.variable_descriptor_count { *dst |= 0x00000008; }
    }
}

impl Default for VkDescriptorBindingFlags {
    fn default() -> VkDescriptorBindingFlags {
        VkDescriptorBindingFlags {
            update_after_bind: false,
            update_unused_while_pending: false,
            partially_bound: false,
            variable_descriptor_count: false,
        }
    }
}

impl VkDescriptorBindingFlags {
    
    pub fn none() -> VkDescriptorBindingFlags {
        VkDescriptorBindingFlags {
            update_after_bind: false,
            update_unused_while_pending: false,
            partially_bound: false,
            variable_descriptor_count: false,
        }
    }
    
    pub fn all() -> VkDescriptorBindingFlags {
        VkDescriptorBindingFlags {
            update_after_bind: true,
            update_unused_while_pending: true,
            partially_bound: true,
            variable_descriptor_count: true,
        }
    }
}