// Generated by `scripts/generate_vk.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vk::vk_instance_function_table::*;
use vk::vk_instance::*;
use vk::vk_device::*;
use vk::vk_structure_type::*;

#[derive(Debug, Clone)]
pub struct VkDescriptorPoolInlineUniformBlockCreateInfo {
    pub max_inline_uniform_block_bindings: usize,
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkDescriptorPoolInlineUniformBlockCreateInfo {
    pub s_type: RawVkStructureType,
    pub next: *const c_void,
    pub max_inline_uniform_block_bindings: u32,
}

impl VkWrappedType<RawVkDescriptorPoolInlineUniformBlockCreateInfo> for VkDescriptorPoolInlineUniformBlockCreateInfo {
    fn vk_to_raw(src: &VkDescriptorPoolInlineUniformBlockCreateInfo, dst: &mut RawVkDescriptorPoolInlineUniformBlockCreateInfo) {
        dst.s_type = vk_to_raw_value(&VkStructureType::DescriptorPoolInlineUniformBlockCreateInfoExt);
        dst.next = ptr::null();
        dst.max_inline_uniform_block_bindings = vk_to_raw_value(&src.max_inline_uniform_block_bindings);
    }
}

impl VkRawType<VkDescriptorPoolInlineUniformBlockCreateInfo> for RawVkDescriptorPoolInlineUniformBlockCreateInfo {
    fn vk_to_wrapped(src: &RawVkDescriptorPoolInlineUniformBlockCreateInfo) -> VkDescriptorPoolInlineUniformBlockCreateInfo {
        VkDescriptorPoolInlineUniformBlockCreateInfo {
            max_inline_uniform_block_bindings: u32::vk_to_wrapped(&src.max_inline_uniform_block_bindings),
        }
    }
}

impl Default for VkDescriptorPoolInlineUniformBlockCreateInfo {
    fn default() -> VkDescriptorPoolInlineUniformBlockCreateInfo {
        VkDescriptorPoolInlineUniformBlockCreateInfo {
            max_inline_uniform_block_bindings: 0,
        }
    }
}

impl VkSetup for VkDescriptorPoolInlineUniformBlockCreateInfo {
    fn vk_setup(&mut self, fn_table: *mut VkInstanceFunctionTable, instance: RawVkInstance, device: RawVkDevice) {
        
    }
}

impl VkFree for RawVkDescriptorPoolInlineUniformBlockCreateInfo {
    fn vk_free(&mut self) {
        
    }
}