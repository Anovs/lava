// Generated by `scripts/generate_vk.js`

use utils::vk_traits::*;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkDeviceEventType {
    DisplayHotplug = 0,
}

pub type RawVkDeviceEventType = i32;

impl VkWrappedType<RawVkDeviceEventType> for VkDeviceEventType {
    fn vk_to_raw(src: &VkDeviceEventType, dst: &mut RawVkDeviceEventType) {
        *dst = *src as i32
    }
}

impl VkRawType<VkDeviceEventType> for RawVkDeviceEventType {
    fn vk_to_wrapped(src: &RawVkDeviceEventType) -> VkDeviceEventType {
        unsafe {
            *((src as *const i32) as *const VkDeviceEventType)
        }
    }
}

impl Default for VkDeviceEventType {
    fn default() -> VkDeviceEventType {
        VkDeviceEventType::DisplayHotplug
    }
}