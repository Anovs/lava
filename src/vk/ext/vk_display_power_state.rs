// Generated by `scripts/generate_vk.js`

use utils::vk_traits::*;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkDisplayPowerState {
    Off = 0,
    Suspend = 1,
    On = 2,
}

pub type RawVkDisplayPowerState = i32;

impl VkWrappedType<RawVkDisplayPowerState> for VkDisplayPowerState {
    fn vk_to_raw(src: &VkDisplayPowerState, dst: &mut RawVkDisplayPowerState) {
        *dst = *src as i32
    }
}

impl VkRawType<VkDisplayPowerState> for RawVkDisplayPowerState {
    fn vk_to_wrapped(src: &RawVkDisplayPowerState) -> VkDisplayPowerState {
        unsafe {
            *((src as *const i32) as *const VkDisplayPowerState)
        }
    }
}

impl Default for VkDisplayPowerState {
    fn default() -> VkDisplayPowerState {
        VkDisplayPowerState::Off
    }
}