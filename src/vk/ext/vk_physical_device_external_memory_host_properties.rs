// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vk::vk_instance_function_table::*;
use vk::vk_instance::*;
use vk::vk_device::*;
use vk::vk_structure_type::*;

#[derive(Debug, Clone)]
pub struct VkPhysicalDeviceExternalMemoryHostProperties {
    pub min_imported_host_pointer_alignment: usize,
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkPhysicalDeviceExternalMemoryHostProperties {
    pub s_type: RawVkStructureType,
    pub next: *const c_void,
    pub min_imported_host_pointer_alignment: u64,
}

impl VkWrappedType<RawVkPhysicalDeviceExternalMemoryHostProperties> for VkPhysicalDeviceExternalMemoryHostProperties {
    fn vk_to_raw(src: &VkPhysicalDeviceExternalMemoryHostProperties, dst: &mut RawVkPhysicalDeviceExternalMemoryHostProperties) {
        dst.s_type = vk_to_raw_value(&VkStructureType::PhysicalDeviceExternalMemoryHostPropertiesExt);
        dst.next = ptr::null();
        dst.min_imported_host_pointer_alignment = vk_to_raw_value(&src.min_imported_host_pointer_alignment);
    }
}

impl VkRawType<VkPhysicalDeviceExternalMemoryHostProperties> for RawVkPhysicalDeviceExternalMemoryHostProperties {
    fn vk_to_wrapped(src: &RawVkPhysicalDeviceExternalMemoryHostProperties) -> VkPhysicalDeviceExternalMemoryHostProperties {
        VkPhysicalDeviceExternalMemoryHostProperties {
            min_imported_host_pointer_alignment: u64::vk_to_wrapped(&src.min_imported_host_pointer_alignment),
        }
    }
}

impl Default for VkPhysicalDeviceExternalMemoryHostProperties {
    fn default() -> VkPhysicalDeviceExternalMemoryHostProperties {
        VkPhysicalDeviceExternalMemoryHostProperties {
            min_imported_host_pointer_alignment: 0,
        }
    }
}

impl VkSetup for VkPhysicalDeviceExternalMemoryHostProperties {
    fn vk_setup(&mut self, fn_table: *mut VkInstanceFunctionTable, instance: RawVkInstance, device: RawVkDevice) {
        
    }
}

impl VkFree for RawVkPhysicalDeviceExternalMemoryHostProperties {
    fn vk_free(&mut self) {
        
    }
}