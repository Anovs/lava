// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkValidationCacheHeaderVersion = i32;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkValidationCacheHeaderVersion {
    One = 1,
}

impl VkRawType<VkValidationCacheHeaderVersion> for RawVkValidationCacheHeaderVersion {
    fn vk_to_wrapped(src: &RawVkValidationCacheHeaderVersion) -> VkValidationCacheHeaderVersion {
        unsafe {
            *((src as *const i32) as *const VkValidationCacheHeaderVersion)
        }
    }
}

impl VkWrappedType<RawVkValidationCacheHeaderVersion> for VkValidationCacheHeaderVersion {
    fn vk_to_raw(src: &VkValidationCacheHeaderVersion, dst: &mut RawVkValidationCacheHeaderVersion) {
        *dst = *src as i32
    }
}

pub static STATIC_VK_VALIDATION_CACHE_HEADER_VERSION : VkValidationCacheHeaderVersion = VkValidationCacheHeaderVersion::One;

impl VkDefault for VkValidationCacheHeaderVersion {
    fn vk_default() -> VkValidationCacheHeaderVersion {
        STATIC_VK_VALIDATION_CACHE_HEADER_VERSION
    }
}