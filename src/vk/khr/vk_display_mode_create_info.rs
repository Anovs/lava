// Generated by `scripts/generate_vk.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vk::vk_instance_function_table::*;
use vk::vk_instance::*;
use vk::vk_device::*;
use vk::vk_structure_type::*;
use vk::khr::vk_display_mode_create_flags::*;
use vk::khr::vk_display_mode_parameters::*;

#[repr(C)]
pub struct RawVkDisplayModeCreateInfo {
    s_type: RawVkStructureType,
    next: *const c_void,
    flags: RawVkDisplayModeCreateFlags,
    parameters: RawVkDisplayModeParameters,
}

#[derive(Debug, Clone)]
pub struct VkDisplayModeCreateInfo {
    pub flags: VkDisplayModeCreateFlags,
    pub parameters: VkDisplayModeParameters,
}

impl VkRawType<VkDisplayModeCreateInfo> for RawVkDisplayModeCreateInfo {
    fn vk_to_wrapped(src: &RawVkDisplayModeCreateInfo) -> VkDisplayModeCreateInfo {
        VkDisplayModeCreateInfo {
            flags: RawVkDisplayModeCreateFlags::vk_to_wrapped(&src.flags),
            parameters: RawVkDisplayModeParameters::vk_to_wrapped(&src.parameters),
        }
    }
}

impl VkWrappedType<RawVkDisplayModeCreateInfo> for VkDisplayModeCreateInfo {
    fn vk_to_raw(src: &VkDisplayModeCreateInfo, dst: &mut RawVkDisplayModeCreateInfo) {
        dst.s_type = vk_to_raw_value(&VkStructureType::DisplayModeCreateInfoKhr);
        dst.next = ptr::null();
        dst.flags = vk_to_raw_value(&src.flags);
        dst.parameters = vk_to_raw_value(&src.parameters);
    }
}

impl Default for VkDisplayModeCreateInfo {
    fn default() -> VkDisplayModeCreateInfo {
        VkDisplayModeCreateInfo {
            flags: VkDisplayModeCreateFlags::default(),
            parameters: VkDisplayModeParameters::default(),
        }
    }
}

impl VkSetup for VkDisplayModeCreateInfo {
    fn vk_setup(&mut self, fn_table: *mut VkInstanceFunctionTable, instance: RawVkInstance, device: RawVkDevice) {
        VkSetup::vk_setup(&mut self.parameters, fn_table, instance, device);
    }
}

impl VkFree for RawVkDisplayModeCreateInfo {
    fn vk_free(&mut self) {
        RawVkDisplayModeParameters::vk_free(&mut self.parameters);
    }
}