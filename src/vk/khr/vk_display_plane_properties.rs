// Generated by `scripts/generate_vk.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vk::vk_instance_function_table::*;
use vk::vk_instance::*;
use vk::vk_device::*;
use vk::khr::vk_display::*;

#[repr(C)]
pub struct RawVkDisplayPlaneProperties {
    current_display: RawVkDisplay,
    current_stack_index: u32,
}

#[derive(Debug, Clone)]
pub struct VkDisplayPlaneProperties {
    pub current_display: VkDisplay,
    pub current_stack_index: usize,
}

impl VkRawType<VkDisplayPlaneProperties> for RawVkDisplayPlaneProperties {
    fn vk_to_wrapped(src: &RawVkDisplayPlaneProperties) -> VkDisplayPlaneProperties {
        VkDisplayPlaneProperties {
            current_display: RawVkDisplay::vk_to_wrapped(&src.current_display),
            current_stack_index: u32::vk_to_wrapped(&src.current_stack_index),
        }
    }
}

impl VkSetup for VkDisplayPlaneProperties {
    fn vk_setup(&mut self, fn_table: *mut VkInstanceFunctionTable, instance: RawVkInstance, device: RawVkDevice) {
        VkSetup::vk_setup(&mut self.current_display, fn_table, instance, device);
    }
}

impl VkFree for RawVkDisplayPlaneProperties {
    fn vk_free(&mut self) {
        
    }
}