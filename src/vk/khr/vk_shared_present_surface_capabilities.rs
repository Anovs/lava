// Generated by `scripts/generate_vk.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vk::vk_instance_function_table::*;
use vk::vk_instance::*;
use vk::vk_device::*;
use vk::vk_structure_type::*;
use vk::vk_image_usage_flags::*;

#[repr(C)]
pub struct RawVkSharedPresentSurfaceCapabilities {
    pub s_type: RawVkStructureType,
    pub next: *const c_void,
    pub shared_present_supported_usage_flags: RawVkImageUsageFlags,
}

#[derive(Debug, Clone)]
pub struct VkSharedPresentSurfaceCapabilities {
    pub shared_present_supported_usage_flags: VkImageUsageFlags,
}

impl VkRawType<VkSharedPresentSurfaceCapabilities> for RawVkSharedPresentSurfaceCapabilities {
    fn vk_to_wrapped(src: &RawVkSharedPresentSurfaceCapabilities) -> VkSharedPresentSurfaceCapabilities {
        VkSharedPresentSurfaceCapabilities {
            shared_present_supported_usage_flags: RawVkImageUsageFlags::vk_to_wrapped(&src.shared_present_supported_usage_flags),
        }
    }
}

impl VkWrappedType<RawVkSharedPresentSurfaceCapabilities> for VkSharedPresentSurfaceCapabilities {
    fn vk_to_raw(src: &VkSharedPresentSurfaceCapabilities, dst: &mut RawVkSharedPresentSurfaceCapabilities) {
        dst.s_type = vk_to_raw_value(&VkStructureType::SharedPresentSurfaceCapabilitiesKhr);
        dst.next = ptr::null();
        dst.shared_present_supported_usage_flags = vk_to_raw_value(&src.shared_present_supported_usage_flags);
    }
}

impl Default for VkSharedPresentSurfaceCapabilities {
    fn default() -> VkSharedPresentSurfaceCapabilities {
        VkSharedPresentSurfaceCapabilities {
            shared_present_supported_usage_flags: VkImageUsageFlags::default(),
        }
    }
}

impl VkSetup for VkSharedPresentSurfaceCapabilities {
    fn vk_setup(&mut self, fn_table: *mut VkInstanceFunctionTable, instance: RawVkInstance, device: RawVkDevice) {
        
    }
}

impl VkFree for RawVkSharedPresentSurfaceCapabilities {
    fn vk_free(&mut self) {
        
    }
}