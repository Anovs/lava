// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkCoverageModulationMode = i32;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkCoverageModulationMode {
    None = 0,
    Rgb = 1,
    Alpha = 2,
    Rgba = 3,
}

impl VkRawType<VkCoverageModulationMode> for RawVkCoverageModulationMode {
    
    fn vk_to_wrapped(src: &RawVkCoverageModulationMode) -> VkCoverageModulationMode {
        unsafe {
            *((src as *const i32) as *const VkCoverageModulationMode)
        }
    }
}

impl VkWrappedType<RawVkCoverageModulationMode> for VkCoverageModulationMode {
    
    fn vk_to_raw(src: &VkCoverageModulationMode, dst: &mut RawVkCoverageModulationMode) {
        *dst = *src as i32
    }
}

impl VkDefault for VkCoverageModulationMode {
    
    fn vk_default() -> VkCoverageModulationMode {
        VkCoverageModulationMode::None
    }
}