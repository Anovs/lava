// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkExternalMemoryHandleTypeFlags = u32;

#[derive(Debug, Copy, Clone)]
pub struct VkExternalMemoryHandleTypeFlags {
    opaque_win32: bool,
    opaque_win32_kmt: bool,
    d3d11_image: bool,
    d3d11_image_kmt: bool,
}

impl VkRawType<VkExternalMemoryHandleTypeFlags> for RawVkExternalMemoryHandleTypeFlags {
    fn vk_to_wrapped(src: &RawVkExternalMemoryHandleTypeFlags) -> VkExternalMemoryHandleTypeFlags {
        VkExternalMemoryHandleTypeFlags {
            opaque_win32: (src & 0x00000001) != 0,
            opaque_win32_kmt: (src & 0x00000002) != 0,
            d3d11_image: (src & 0x00000004) != 0,
            d3d11_image_kmt: (src & 0x00000008) != 0,
        }
    }
}

impl VkWrappedType<RawVkExternalMemoryHandleTypeFlags> for VkExternalMemoryHandleTypeFlags {
    fn vk_to_raw(src: &VkExternalMemoryHandleTypeFlags, dst: &mut RawVkExternalMemoryHandleTypeFlags) {
        *dst = 0;
        if src.opaque_win32 { *dst |= 0x00000001; }
        if src.opaque_win32_kmt { *dst |= 0x00000002; }
        if src.d3d11_image { *dst |= 0x00000004; }
        if src.d3d11_image_kmt { *dst |= 0x00000008; }
    }
}

pub static STATIC_VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAGS : VkExternalMemoryHandleTypeFlags = VkExternalMemoryHandleTypeFlags {
    opaque_win32: false,
    opaque_win32_kmt: false,
    d3d11_image: false,
    d3d11_image_kmt: false,
};

impl VkDefault for VkExternalMemoryHandleTypeFlags {
    fn vk_default() -> VkExternalMemoryHandleTypeFlags {
        STATIC_VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAGS
    }
}