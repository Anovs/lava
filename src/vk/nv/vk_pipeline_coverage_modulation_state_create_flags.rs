// Generated by `scripts/generate_vk.js`

use utils::vk_traits::*;

#[derive(Debug, Clone, Copy)]
pub struct VkPipelineCoverageModulationStateCreateFlags {
    
}

pub type RawVkPipelineCoverageModulationStateCreateFlags = u32;

impl VkWrappedType<RawVkPipelineCoverageModulationStateCreateFlags> for VkPipelineCoverageModulationStateCreateFlags {
    fn vk_to_raw(src: &VkPipelineCoverageModulationStateCreateFlags, dst: &mut RawVkPipelineCoverageModulationStateCreateFlags) {
        *dst = 0;
    }
}

impl VkRawType<VkPipelineCoverageModulationStateCreateFlags> for RawVkPipelineCoverageModulationStateCreateFlags {
    fn vk_to_wrapped(src: &RawVkPipelineCoverageModulationStateCreateFlags) -> VkPipelineCoverageModulationStateCreateFlags {
        VkPipelineCoverageModulationStateCreateFlags {
            
        }
    }
}

impl Default for VkPipelineCoverageModulationStateCreateFlags {
    fn default() -> VkPipelineCoverageModulationStateCreateFlags {
        VkPipelineCoverageModulationStateCreateFlags {
            
        }
    }
}

impl VkPipelineCoverageModulationStateCreateFlags {
    
    pub fn none() -> VkPipelineCoverageModulationStateCreateFlags {
        VkPipelineCoverageModulationStateCreateFlags {
            
        }
    }
    
    pub fn all() -> VkPipelineCoverageModulationStateCreateFlags {
        VkPipelineCoverageModulationStateCreateFlags {
            
        }
    }
}

impl VkPipelineCoverageModulationStateCreateFlags {
    
    pub fn to_u32(&self) -> u32 {
        0
    }
}