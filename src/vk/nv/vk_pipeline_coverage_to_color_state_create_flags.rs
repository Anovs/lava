// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkPipelineCoverageToColorStateCreateFlags = u32;

#[derive(Debug, Copy, Clone)]
pub struct VkPipelineCoverageToColorStateCreateFlags {
    
}

impl VkRawType<VkPipelineCoverageToColorStateCreateFlags> for RawVkPipelineCoverageToColorStateCreateFlags {
    fn vk_to_wrapped(src: &RawVkPipelineCoverageToColorStateCreateFlags) -> VkPipelineCoverageToColorStateCreateFlags {
        VkPipelineCoverageToColorStateCreateFlags {
            
        }
    }
}

impl VkWrappedType<RawVkPipelineCoverageToColorStateCreateFlags> for VkPipelineCoverageToColorStateCreateFlags {
    fn vk_to_raw(src: &VkPipelineCoverageToColorStateCreateFlags, dst: &mut RawVkPipelineCoverageToColorStateCreateFlags) {
        *dst = 0;
    }
}

pub static STATIC_VK_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_FLAGS : VkPipelineCoverageToColorStateCreateFlags = VkPipelineCoverageToColorStateCreateFlags {
    
};

impl VkDefault for VkPipelineCoverageToColorStateCreateFlags {
    fn vk_default() -> VkPipelineCoverageToColorStateCreateFlags {
        STATIC_VK_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_FLAGS
    }
}