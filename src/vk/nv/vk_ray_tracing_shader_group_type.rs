// Generated by `scripts/generate_vk.js`

use utils::vk_traits::*;

pub type RawVkRayTracingShaderGroupType = i32;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkRayTracingShaderGroupType {
    General = 0,
    TrianglesHitGroup = 1,
    ProceduralHitGroup = 2,
}

impl VkRawType<VkRayTracingShaderGroupType> for RawVkRayTracingShaderGroupType {
    fn vk_to_wrapped(src: &RawVkRayTracingShaderGroupType) -> VkRayTracingShaderGroupType {
        unsafe {
            *((src as *const i32) as *const VkRayTracingShaderGroupType)
        }
    }
}

impl VkWrappedType<RawVkRayTracingShaderGroupType> for VkRayTracingShaderGroupType {
    fn vk_to_raw(src: &VkRayTracingShaderGroupType, dst: &mut RawVkRayTracingShaderGroupType) {
        *dst = *src as i32
    }
}

impl Default for VkRayTracingShaderGroupType {
    fn default() -> VkRayTracingShaderGroupType {
        VkRayTracingShaderGroupType::General
    }
}