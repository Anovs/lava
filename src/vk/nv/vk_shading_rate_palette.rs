// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vk::vk_instance_function_table::*;
use vk::vk_instance::*;
use vk::vk_device::*;
use vk::nv::vk_shading_rate_palette_entry::*;

#[derive(Debug, Clone)]
pub struct VkShadingRatePalette<'a> {
    pub shading_rate_palette_entries: &'a [VkShadingRatePaletteEntry],
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkShadingRatePalette {
    pub shading_rate_palette_entry_count: u32,
    pub shading_rate_palette_entries: *mut RawVkShadingRatePaletteEntry,
}

impl<'a> VkWrappedType<RawVkShadingRatePalette> for VkShadingRatePalette<'a> {
    fn vk_to_raw(src: &VkShadingRatePalette, dst: &mut RawVkShadingRatePalette) {
        dst.shading_rate_palette_entry_count = src.shading_rate_palette_entries.len() as u32;
        dst.shading_rate_palette_entries = new_ptr_vk_array(src.shading_rate_palette_entries);
    }
}

impl Default for VkShadingRatePalette<'static> {
    fn default() -> VkShadingRatePalette<'static> {
        VkShadingRatePalette {
            shading_rate_palette_entries: &[],
        }
    }
}

impl<'a> VkSetup for VkShadingRatePalette<'a> {
    fn vk_setup(&mut self, fn_table: *mut VkInstanceFunctionTable, instance: RawVkInstance, device: RawVkDevice) {
        
    }
}

impl VkFree for RawVkShadingRatePalette {
    fn vk_free(&mut self) {
        free_ptr(self.shading_rate_palette_entries);
    }
}