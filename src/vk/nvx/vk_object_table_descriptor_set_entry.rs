// Generated by `scripts/generate_vk.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vk::vk_instance_function_table::*;
use vk::vk_instance::*;
use vk::vk_device::*;
use vk::nvx::vk_object_entry_type::*;
use vk::nvx::vk_object_entry_usage_flags::*;
use vk::vk_pipeline_layout::*;
use vk::vk_descriptor_set::*;

#[repr(C)]
#[derive(Debug)]
pub struct RawVkObjectTableDescriptorSetEntry {
    pub type_: RawVkObjectEntryType,
    pub flags: RawVkObjectEntryUsageFlags,
    pub pipeline_layout: RawVkPipelineLayout,
    pub descriptor_set: RawVkDescriptorSet,
}

#[derive(Debug, Clone)]
pub struct VkObjectTableDescriptorSetEntry<'a, 'b> {
    pub type_: VkObjectEntryType,
    pub flags: VkObjectEntryUsageFlags,
    pub pipeline_layout: &'a VkPipelineLayout,
    pub descriptor_set: &'b VkDescriptorSet,
}

impl<'a, 'b> VkWrappedType<RawVkObjectTableDescriptorSetEntry> for VkObjectTableDescriptorSetEntry<'a, 'b> {
    fn vk_to_raw(src: &VkObjectTableDescriptorSetEntry, dst: &mut RawVkObjectTableDescriptorSetEntry) {
        dst.type_ = vk_to_raw_value(&src.type_);
        dst.flags = vk_to_raw_value(&src.flags);
        dst.pipeline_layout = vk_to_raw_value(src.pipeline_layout);
        dst.descriptor_set = vk_to_raw_value(src.descriptor_set);
    }
}

impl Default for VkObjectTableDescriptorSetEntry<'static, 'static> {
    fn default() -> VkObjectTableDescriptorSetEntry<'static, 'static> {
        VkObjectTableDescriptorSetEntry {
            type_: VkObjectEntryType::default(),
            flags: VkObjectEntryUsageFlags::default(),
            pipeline_layout: vk_null_ref(),
            descriptor_set: vk_null_ref(),
        }
    }
}

impl<'a, 'b> VkSetup for VkObjectTableDescriptorSetEntry<'a, 'b> {
    fn vk_setup(&mut self, fn_table: *mut VkInstanceFunctionTable, instance: RawVkInstance, device: RawVkDevice) {
        
    }
}

impl VkFree for RawVkObjectTableDescriptorSetEntry {
    fn vk_free(&mut self) {
        
    }
}