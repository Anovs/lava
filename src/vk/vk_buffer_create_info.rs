// Template generated by `scripts/generate_type.js`

use std::default::Default;
use std::convert::From;
use std::ops::Drop;
use libc::*;
use vk::*;

#[repr(C)]
pub struct RawVkBufferCreateInfo {
    s_type: VkStructureType,
    p_next: *const void,
    flags: RawVkBufferCreateFlags,
    size: u64,
    usage: RawVkBufferUsageFlags,
    sharing_mode: RawVkSharingMode,
    queue_family_index_count: u32,
    p_queue_family_indices: *mut u32,
}

pub struct VkBufferCreateInfo {
}

impl Default for VkBufferCreateInfo {
    fn default() -> Self {
        VkBufferCreateInfo {
        }
    }
}

impl<'a> From<&'a VkBufferCreateInfo> for RawVkBufferCreateInfo {
    fn from(v: &'a VkBufferCreateInfo) -> Self {
        unsafe {
            s_type: VkStructureType::VkBufferCreateInfo,
            p_next: ptr::null(),
            flags: 0,
            size: 0,
            usage: 0,
            sharing_mode: 0,
            queue_family_index_count: 0,
            p_queue_family_indices: ptr::null_mut(),
        }
    }
}

impl Drop for RawVkBufferCreateInfo {
    fn drop(&mut self) -> Self {
        unsafe {
            free_c_ptr(self.p_queue_family_indices);
        }
    }
}