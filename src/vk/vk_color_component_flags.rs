// Generated by `scripts/generate_vk.js`

use utils::vk_traits::*;

pub type RawVkColorComponentFlags = u32;

#[derive(Debug, Clone, Copy)]
pub struct VkColorComponentFlags {
    pub r: bool,
    pub g: bool,
    pub b: bool,
    pub a: bool,
}

impl VkRawType<VkColorComponentFlags> for RawVkColorComponentFlags {
    fn vk_to_wrapped(src: &RawVkColorComponentFlags) -> VkColorComponentFlags {
        VkColorComponentFlags {
            r: (src & 0x00000001) != 0,
            g: (src & 0x00000002) != 0,
            b: (src & 0x00000004) != 0,
            a: (src & 0x00000008) != 0,
        }
    }
}

impl VkWrappedType<RawVkColorComponentFlags> for VkColorComponentFlags {
    fn vk_to_raw(src: &VkColorComponentFlags, dst: &mut RawVkColorComponentFlags) {
        *dst = 0;
        if src.r { *dst |= 0x00000001; }
        if src.g { *dst |= 0x00000002; }
        if src.b { *dst |= 0x00000004; }
        if src.a { *dst |= 0x00000008; }
    }
}

impl Default for VkColorComponentFlags {
    fn default() -> VkColorComponentFlags {
        VkColorComponentFlags {
            r: false,
            g: false,
            b: false,
            a: false,
        }
    }
}

impl VkColorComponentFlags {
    
    pub fn none() -> VkColorComponentFlags {
        VkColorComponentFlags {
            r: false,
            g: false,
            b: false,
            a: false,
        }
    }
    
    pub fn all() -> VkColorComponentFlags {
        VkColorComponentFlags {
            r: true,
            g: true,
            b: true,
            a: true,
        }
    }
}