// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkCommandBufferLevel = i32;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkCommandBufferLevel {
    Primary = 0,
    Secondary = 1,
}

impl VkRawType<VkCommandBufferLevel> for RawVkCommandBufferLevel {
    
    fn vk_to_wrapped(src: &RawVkCommandBufferLevel) -> VkCommandBufferLevel {
        unsafe {
            *((src as *const i32) as *const VkCommandBufferLevel)
        }
    }
}

impl VkWrappedType<RawVkCommandBufferLevel> for VkCommandBufferLevel {
    
    fn vk_to_raw(src: &VkCommandBufferLevel, dst: &mut RawVkCommandBufferLevel) {
        *dst = *src as i32
    }
    
    fn vk_default() -> VkCommandBufferLevel {
        VkCommandBufferLevel::Primary
    }
}