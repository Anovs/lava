// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkDescriptorSetLayoutCreateFlags = u32;

#[derive(Debug, Copy, Clone)]
pub struct VkDescriptorSetLayoutCreateFlags {
    push_descriptor_khr: bool,
    update_after_bind_pool_ext: bool,
}

impl VkRawType<VkDescriptorSetLayoutCreateFlags> for RawVkDescriptorSetLayoutCreateFlags {
    fn vk_to_wrapped(src: &RawVkDescriptorSetLayoutCreateFlags) -> VkDescriptorSetLayoutCreateFlags {
        VkDescriptorSetLayoutCreateFlags {
            push_descriptor_khr: (src & 0x00000001) != 0,
            update_after_bind_pool_ext: (src & 0x00000002) != 0,
        }
    }
}

impl VkWrappedType<RawVkDescriptorSetLayoutCreateFlags> for VkDescriptorSetLayoutCreateFlags {
    fn vk_to_raw(src: &VkDescriptorSetLayoutCreateFlags, dst: &mut RawVkDescriptorSetLayoutCreateFlags) {
        *dst = 0;
        if src.push_descriptor_khr { *dst |= 0x00000001; }
        if src.update_after_bind_pool_ext { *dst |= 0x00000002; }
    }
}

impl VkDefault for VkDescriptorSetLayoutCreateFlags {
    fn vk_default() -> VkDescriptorSetLayoutCreateFlags {
        VkDescriptorSetLayoutCreateFlags {
            push_descriptor_khr: false,
            update_after_bind_pool_ext: false,
        }
    }
}