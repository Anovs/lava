// Generated by `scripts/generate_type.js`

use std::convert::From;

pub type RawVkDeviceQueueCreateFlags = u32;

#[derive(Debug, Default)]
pub struct VkDeviceQueueCreateFlags {
    pub protected: bool
}

impl<'a> From<&'a u32> for VkDeviceQueueCreateFlags {
    fn from(value: &'a u32) -> Self {
        VkDeviceQueueCreateFlags {
            protected: (value & 0x00000001) > 0
        }
    }
}

impl<'a> From<&'a VkDeviceQueueCreateFlags> for u32 {
    fn from(value: &'a VkDeviceQueueCreateFlags) -> Self {
        (if value.protected { 0x00000001 } else { 0 })
    }
}

impl VkDeviceQueueCreateFlags {
    pub fn none() -> Self {
        VkDeviceQueueCreateFlags::default()
    }

    pub fn all() -> Self {
        VkDeviceQueueCreateFlags {
            protected: true
        }
    }
}