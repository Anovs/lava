// Generated by `scripts/schema.js`

use vk::*;
use std::os::raw::c_char;
use std::ptr::null;
use libc::*;

#[repr(C)]
pub struct RawVkExtensionProperties {
    extension_name: [c_char; 256],
    spec_version: u32,
}

#[derive(Debug)]
pub struct VkExtensionProperties {
    pub extension_name: String,
    pub spec_version: [u32; 3],
}

impl VkFrom<VkExtensionProperties> for RawVkExtensionProperties {
    
    fn vk_from(value: &VkExtensionProperties) -> Self {
        Self {
            extension_name: [0; 256],
            spec_version: vk_make_version(&value.spec_version),
        }
    }
}

impl VkFrom<RawVkExtensionProperties> for VkExtensionProperties {
    
    fn vk_from(value: &RawVkExtensionProperties) -> Self {
        unsafe {
            Self {
                extension_name: copy_as_string(&value.extension_name as *const c_char),
                spec_version: vk_from_version(value.spec_version),
            }
        }
    }
}