// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkExternalMemoryFeatureFlags = u32;

#[derive(Debug, Copy, Clone)]
pub struct VkExternalMemoryFeatureFlags {
    dedicated_only: bool,
    exportable: bool,
    importable: bool,
}

impl VkRawType<VkExternalMemoryFeatureFlags> for RawVkExternalMemoryFeatureFlags {
    
    fn vk_to_wrapped(src: &RawVkExternalMemoryFeatureFlags) -> VkExternalMemoryFeatureFlags {
        VkExternalMemoryFeatureFlags {
            dedicated_only: (src & 0x00000001) != 0,
            exportable: (src & 0x00000002) != 0,
            importable: (src & 0x00000004) != 0,
        }
    }
}

impl VkWrappedType<RawVkExternalMemoryFeatureFlags> for VkExternalMemoryFeatureFlags {
    
    fn vk_to_raw(src: &VkExternalMemoryFeatureFlags, dst: &mut RawVkExternalMemoryFeatureFlags) {
        *dst = 0;
        if src.dedicated_only { *dst |= 0x00000001; }
        if src.exportable { *dst |= 0x00000002; }
        if src.importable { *dst |= 0x00000004; }
    }
}

impl VkDefault for VkExternalMemoryFeatureFlags {
    
    fn vk_default() -> VkExternalMemoryFeatureFlags {
        VkExternalMemoryFeatureFlags {
            dedicated_only: false,
            exportable: false,
            importable: false,
        }
    }
}