// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkExternalSemaphoreFeatureFlags = u32;

#[derive(Debug, Copy, Clone)]
pub struct VkExternalSemaphoreFeatureFlags {
    exportable: bool,
    importable: bool,
}

impl VkRawType<VkExternalSemaphoreFeatureFlags> for RawVkExternalSemaphoreFeatureFlags {
    fn vk_to_wrapped(src: &RawVkExternalSemaphoreFeatureFlags) -> VkExternalSemaphoreFeatureFlags {
        VkExternalSemaphoreFeatureFlags {
            exportable: (src & 0x00000001) != 0,
            importable: (src & 0x00000002) != 0,
        }
    }
}

impl VkWrappedType<RawVkExternalSemaphoreFeatureFlags> for VkExternalSemaphoreFeatureFlags {
    fn vk_to_raw(src: &VkExternalSemaphoreFeatureFlags, dst: &mut RawVkExternalSemaphoreFeatureFlags) {
        *dst = 0;
        if src.exportable { *dst |= 0x00000001; }
        if src.importable { *dst |= 0x00000002; }
    }
}

pub static STATIC_VK_EXTERNAL_SEMAPHORE_FEATURE_FLAGS : VkExternalSemaphoreFeatureFlags = VkExternalSemaphoreFeatureFlags {
    exportable: false,
    importable: false,
};

impl VkDefault for VkExternalSemaphoreFeatureFlags {
    fn vk_default() -> VkExternalSemaphoreFeatureFlags {
        STATIC_VK_EXTERNAL_SEMAPHORE_FEATURE_FLAGS
    }
}