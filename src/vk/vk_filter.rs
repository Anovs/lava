// Generated by `scripts/generate_vk.js`

use utils::vk_traits::*;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkFilter {
    Nearest = 0,
    Linear = 1,
    CubicImg = 1000015000,
}

pub type RawVkFilter = i32;

impl VkWrappedType<RawVkFilter> for VkFilter {
    fn vk_to_raw(src: &VkFilter, dst: &mut RawVkFilter) {
        *dst = *src as i32
    }
}

impl VkRawType<VkFilter> for RawVkFilter {
    fn vk_to_wrapped(src: &RawVkFilter) -> VkFilter {
        unsafe {
            *((src as *const i32) as *const VkFilter)
        }
    }
}

impl Default for VkFilter {
    fn default() -> VkFilter {
        VkFilter::Nearest
    }
}