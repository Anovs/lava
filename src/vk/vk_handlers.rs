use vk::VkHandler;

pub type VkInstance = VkHandler;
pub type VkPhysicalDevice = VkHandler;
pub type VkDevice = VkHandler;
pub type VkQueue = VkHandler;
pub type VkSemaphore = VkHandler;
pub type VkCommandBuffer = VkHandler;
pub type VkFence = VkHandler;
pub type VkDeviceMemory = VkHandler;
pub type VkBuffer = VkHandler;
pub type VkImage = VkHandler;
pub type VkEvent = VkHandler;
pub type VkQueryPool = VkHandler;
pub type VkBufferView = VkHandler;
pub type VkImageView = VkHandler;
pub type VkShaderModule = VkHandler;
pub type VkPipelineCache = VkHandler;
pub type VkPipelineLayout = VkHandler;
pub type VkRenderPass = VkHandler;
pub type VkPipeline = VkHandler;
pub type VkDescriptorSetLayout = VkHandler;
pub type VkSampler = VkHandler;
pub type VkDescriptorPool = VkHandler;
pub type VkDescriptorSet = VkHandler;
pub type VkFramebuffer = VkHandler;
pub type VkCommandPool = VkHandler;
pub type VkSamplerYcbcrConversion = VkHandler;
pub type VkDescriptorUpdateTemplate = VkHandler;
pub type VkSurfaceKHR = VkHandler;
pub type VkSwapchainKHR = VkHandler;
pub type VkDisplayKHR = VkHandler;
pub type VkDisplayModeKHR = VkHandler;
pub type VkDebugReportCallbackEXT = VkHandler;
pub type VkObjectTableNVX = VkHandler;
pub type VkIndirectCommandsLayoutNVX = VkHandler;
pub type VkDebugUtilsMessengerEXT = VkHandler;
pub type VkValidationCacheEXT = VkHandler;