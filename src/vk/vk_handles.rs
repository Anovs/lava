use vk::VkHandle;

pub type RawVkInstance = VkHandle;
pub type RawVkPhysicalDevice = VkHandle;
pub type RawVkDevice = VkHandle;
pub type RawVkQueue = VkHandle;
pub type RawVkSemaphore = VkHandle;
pub type RawVkCommandBuffer = VkHandle;
pub type RawVkFence = VkHandle;
pub type RawVkDeviceMemory = VkHandle;
pub type RawVkBuffer = VkHandle;
pub type RawVkImage = VkHandle;
pub type RawVkEvent = VkHandle;
pub type RawVkQueryPool = VkHandle;
pub type RawVkBufferView = VkHandle;
pub type RawVkImageView = VkHandle;
pub type RawVkShaderModule = VkHandle;
pub type RawVkPipelineCache = VkHandle;
pub type RawVkPipelineLayout = VkHandle;
pub type RawVkRenderPass = VkHandle;
pub type RawVkPipeline = VkHandle;
pub type RawVkDescriptorSetLayout = VkHandle;
pub type RawVkSampler = VkHandle;
pub type RawVkDescriptorPool = VkHandle;
pub type RawVkDescriptorSet = VkHandle;
pub type RawVkFramebuffer = VkHandle;
pub type RawVkCommandPool = VkHandle;
pub type RawVkSamplerYcbcrConversion = VkHandle;
pub type RawVkDescriptorUpdateTemplate = VkHandle;
pub type RawVkSurfaceKHR = VkHandle;
pub type RawVkSwapchainKHR = VkHandle;
pub type RawVkDisplayKHR = VkHandle;
pub type RawVkDisplayModeKHR = VkHandle;
pub type RawVkDebugReportCallbackEXT = VkHandle;
pub type RawVkObjectTableNVX = VkHandle;
pub type RawVkIndirectCommandsLayoutNVX = VkHandle;
pub type RawVkDebugUtilsMessengerEXT = VkHandle;
pub type RawVkValidationCacheEXT = VkHandle;