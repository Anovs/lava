// Generated by `scripts/generate_vk.js`

use vk::*;
use std::os::raw::c_char;
use std::ptr::null;
use libc::*;

#[repr(C)]
pub struct RawVkImageViewCreateInfo {
    s_type: RawVkStructureType,
    next: *const c_void,
    flags: RawVkImageViewCreateFlags,
    image: RawVkImage,
    view_type: RawVkImageViewType,
    format: RawVkFormat,
    components: RawVkComponentMapping,
    subresource_range: RawVkImageSubresourceRange,
}

#[derive(Debug)]
pub struct VkImageViewCreateInfo<'a> {
    pub flags: VkImageViewCreateFlags,
    pub image: &'a VkImage,
    pub view_type: VkImageViewType,
    pub format: VkFormat,
    pub components: VkComponentMapping,
    pub subresource_range: VkImageSubresourceRange,
}

impl<'a> VkFrom<VkImageViewCreateInfo<'a>> for RawVkImageViewCreateInfo {
    
    fn vk_from(value: &VkImageViewCreateInfo) -> Self {
        Self {
            s_type: VkFrom::vk_from(&VkStructureType::ImageViewCreateInfo),
            next: null(),
            flags: VkFrom::vk_from(&value.flags),
            image: VkFrom::vk_from(value.image),
            view_type: VkFrom::vk_from(&value.view_type),
            format: VkFrom::vk_from(&value.format),
            components: VkFrom::vk_from(&value.components),
            subresource_range: VkFrom::vk_from(&value.subresource_range),
        }
    }
}