// Generated by `scripts/generate_vk.js`

use vk::*;
use std::os::raw::c_char;
use std::ptr::null;
use libc::*;

#[repr(C)]
pub struct RawVkLayerProperties {
    layer_name: [c_char; 256],
    spec_version: u32,
    implementation_version: u32,
    description: [c_char; 256],
}

#[derive(Debug)]
pub struct VkLayerProperties {
    pub layer_name: String,
    pub spec_version: [u32; 3],
    pub implementation_version: [u32; 3],
    pub description: String,
}

impl VkFrom<VkLayerProperties> for RawVkLayerProperties {
    
    fn vk_from(value: &VkLayerProperties) -> Self {
        Self {
            layer_name: [0; 256],
            spec_version: vk_make_version(&value.spec_version),
            implementation_version: vk_make_version(&value.implementation_version),
            description: [0; 256],
        }
    }
}

impl VkFrom<RawVkLayerProperties> for VkLayerProperties {
    
    fn vk_from(value: &RawVkLayerProperties) -> Self {
        unsafe {
            Self {
                layer_name: copy_as_string(&value.layer_name as *const c_char),
                spec_version: vk_from_version(value.spec_version),
                implementation_version: vk_from_version(value.implementation_version),
                description: copy_as_string(&value.description as *const c_char),
            }
        }
    }
}