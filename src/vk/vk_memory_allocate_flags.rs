// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkMemoryAllocateFlags = u32;

#[derive(Debug, Copy, Clone)]
pub struct VkMemoryAllocateFlags {
    device_mask: bool,
}

impl VkRawType<VkMemoryAllocateFlags> for RawVkMemoryAllocateFlags {
    
    fn vk_to_wrapped(src: &RawVkMemoryAllocateFlags) -> VkMemoryAllocateFlags {
        VkMemoryAllocateFlags {
            device_mask: (src & 0x00000001) != 0,
        }
    }
}

impl VkWrappedType<RawVkMemoryAllocateFlags> for VkMemoryAllocateFlags {
    
    fn vk_to_raw(src: &VkMemoryAllocateFlags, dst: &mut RawVkMemoryAllocateFlags) {
        *dst = 0;
        if src.device_mask { *dst |= 0x00000001; }
    }
}

impl VkDefault for VkMemoryAllocateFlags {
    
    fn vk_default() -> VkMemoryAllocateFlags {
        VkMemoryAllocateFlags {
            device_mask: false,
        }
    }
}