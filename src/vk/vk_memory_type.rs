// Generated by `scripts/generate_type.js`

use std::convert::From;
use vk::*;

#[repr(C)]
#[derive(Clone, Copy, Default)]
pub struct RawVkMemoryType {
    property_flags: RawVkMemoryPropertyFlags,
    heap_index: u32
}

#[derive(Debug)]
pub struct VkMemoryType {
    pub property_flags: VkMemoryPropertyFlags,
    pub heap_index: u32
}

impl<'a> From<&'a RawVkMemoryType> for VkMemoryType {
    fn from(value: &'a RawVkMemoryType) -> Self {
        VkMemoryType {
            property_flags: VkMemoryPropertyFlags::from(&value.property_flags),
            heap_index: value.heap_index
        }
    }
}

impl<'a> From<&'a VkMemoryType> for RawVkMemoryType {
    fn from(value: &'a VkMemoryType) -> Self {
        RawVkMemoryType {
            property_flags: RawVkMemoryPropertyFlags::from(&value.property_flags),
            heap_index: value.heap_index
        }
    }
}

