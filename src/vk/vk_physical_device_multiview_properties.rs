// Generated by `scripts/generate_vk.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vk::vk_instance_function_table::*;
use vk::vk_instance::*;
use vk::vk_device::*;
use vk::vk_structure_type::*;

#[repr(C)]
#[derive(Debug)]
pub struct RawVkPhysicalDeviceMultiviewProperties {
    pub s_type: RawVkStructureType,
    pub next: *const c_void,
    pub max_multiview_view_count: u32,
    pub max_multiview_instance_index: u32,
}

#[derive(Debug, Clone)]
pub struct VkPhysicalDeviceMultiviewProperties {
    pub max_multiview_view_count: usize,
    pub max_multiview_instance_index: usize,
}

impl VkRawType<VkPhysicalDeviceMultiviewProperties> for RawVkPhysicalDeviceMultiviewProperties {
    fn vk_to_wrapped(src: &RawVkPhysicalDeviceMultiviewProperties) -> VkPhysicalDeviceMultiviewProperties {
        VkPhysicalDeviceMultiviewProperties {
            max_multiview_view_count: u32::vk_to_wrapped(&src.max_multiview_view_count),
            max_multiview_instance_index: u32::vk_to_wrapped(&src.max_multiview_instance_index),
        }
    }
}

impl VkWrappedType<RawVkPhysicalDeviceMultiviewProperties> for VkPhysicalDeviceMultiviewProperties {
    fn vk_to_raw(src: &VkPhysicalDeviceMultiviewProperties, dst: &mut RawVkPhysicalDeviceMultiviewProperties) {
        dst.s_type = vk_to_raw_value(&VkStructureType::PhysicalDeviceMultiviewProperties);
        dst.next = ptr::null();
        dst.max_multiview_view_count = vk_to_raw_value(&src.max_multiview_view_count);
        dst.max_multiview_instance_index = vk_to_raw_value(&src.max_multiview_instance_index);
    }
}

impl Default for VkPhysicalDeviceMultiviewProperties {
    fn default() -> VkPhysicalDeviceMultiviewProperties {
        VkPhysicalDeviceMultiviewProperties {
            max_multiview_view_count: 0,
            max_multiview_instance_index: 0,
        }
    }
}

impl VkSetup for VkPhysicalDeviceMultiviewProperties {
    fn vk_setup(&mut self, fn_table: *mut VkInstanceFunctionTable, instance: RawVkInstance, device: RawVkDevice) {
        
    }
}

impl VkFree for RawVkPhysicalDeviceMultiviewProperties {
    fn vk_free(&mut self) {
        
    }
}