// Generated by `scripts/generate_vk.js`

use vk::*;
use std::os::raw::c_char;
use std::ptr::null;
use libc::*;

#[repr(C)]
pub struct RawVkPhysicalDeviceSparseProperties {
    residency_standard2dblock_shape: RawVkBool32,
    residency_standard2dmultisample_block_shape: RawVkBool32,
    residency_standard3dblock_shape: RawVkBool32,
    residency_aligned_mip_size: RawVkBool32,
    residency_non_resident_strict: RawVkBool32,
}

#[derive(Debug)]
pub struct VkPhysicalDeviceSparseProperties {
    pub residency_standard2dblock_shape: bool,
    pub residency_standard2dmultisample_block_shape: bool,
    pub residency_standard3dblock_shape: bool,
    pub residency_aligned_mip_size: bool,
    pub residency_non_resident_strict: bool,
}

impl VkFlags for VkPhysicalDeviceSparseProperties {
    
    fn none() -> Self {
        Self {
            residency_standard2dblock_shape: false,
            residency_standard2dmultisample_block_shape: false,
            residency_standard3dblock_shape: false,
            residency_aligned_mip_size: false,
            residency_non_resident_strict: false,
        }
    }
    
    fn all() -> Self {
        Self {
            residency_standard2dblock_shape: true,
            residency_standard2dmultisample_block_shape: true,
            residency_standard3dblock_shape: true,
            residency_aligned_mip_size: true,
            residency_non_resident_strict: true,
        }
    }
}

impl VkFrom<VkPhysicalDeviceSparseProperties> for RawVkPhysicalDeviceSparseProperties {
    
    fn vk_from(value: &VkPhysicalDeviceSparseProperties) -> Self {
        Self {
            residency_standard2dblock_shape: VkFrom::vk_from(&value.residency_standard2dblock_shape),
            residency_standard2dmultisample_block_shape: VkFrom::vk_from(&value.residency_standard2dmultisample_block_shape),
            residency_standard3dblock_shape: VkFrom::vk_from(&value.residency_standard3dblock_shape),
            residency_aligned_mip_size: VkFrom::vk_from(&value.residency_aligned_mip_size),
            residency_non_resident_strict: VkFrom::vk_from(&value.residency_non_resident_strict),
        }
    }
}

impl VkFrom<RawVkPhysicalDeviceSparseProperties> for VkPhysicalDeviceSparseProperties {
    
    fn vk_from(value: &RawVkPhysicalDeviceSparseProperties) -> Self {
        Self {
            residency_standard2dblock_shape: VkFrom::vk_from(&value.residency_standard2dblock_shape),
            residency_standard2dmultisample_block_shape: VkFrom::vk_from(&value.residency_standard2dmultisample_block_shape),
            residency_standard3dblock_shape: VkFrom::vk_from(&value.residency_standard3dblock_shape),
            residency_aligned_mip_size: VkFrom::vk_from(&value.residency_aligned_mip_size),
            residency_non_resident_strict: VkFrom::vk_from(&value.residency_non_resident_strict),
        }
    }
}