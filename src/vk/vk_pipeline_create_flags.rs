// Generated by `scripts/generate_vk.js`

use utils::vk_traits::*;

pub type RawVkPipelineCreateFlags = u32;

#[derive(Debug, Clone, Copy)]
pub struct VkPipelineCreateFlags {
    pub disable_optimization: bool,
    pub allow_derivatives: bool,
    pub derivative: bool,
    pub view_index_from_device_index: bool,
    pub dispatch_base: bool,
}

impl VkRawType<VkPipelineCreateFlags> for RawVkPipelineCreateFlags {
    fn vk_to_wrapped(src: &RawVkPipelineCreateFlags) -> VkPipelineCreateFlags {
        VkPipelineCreateFlags {
            disable_optimization: (src & 0x00000001) != 0,
            allow_derivatives: (src & 0x00000002) != 0,
            derivative: (src & 0x00000004) != 0,
            view_index_from_device_index: (src & 0x00000008) != 0,
            dispatch_base: (src & 0x00000010) != 0,
        }
    }
}

impl VkWrappedType<RawVkPipelineCreateFlags> for VkPipelineCreateFlags {
    fn vk_to_raw(src: &VkPipelineCreateFlags, dst: &mut RawVkPipelineCreateFlags) {
        *dst = 0;
        if src.disable_optimization { *dst |= 0x00000001; }
        if src.allow_derivatives { *dst |= 0x00000002; }
        if src.derivative { *dst |= 0x00000004; }
        if src.view_index_from_device_index { *dst |= 0x00000008; }
        if src.dispatch_base { *dst |= 0x00000010; }
    }
}

impl Default for VkPipelineCreateFlags {
    fn default() -> VkPipelineCreateFlags {
        VkPipelineCreateFlags {
            disable_optimization: false,
            allow_derivatives: false,
            derivative: false,
            view_index_from_device_index: false,
            dispatch_base: false,
        }
    }
}

impl VkPipelineCreateFlags {
    
    pub fn none() -> VkPipelineCreateFlags {
        VkPipelineCreateFlags {
            disable_optimization: false,
            allow_derivatives: false,
            derivative: false,
            view_index_from_device_index: false,
            dispatch_base: false,
        }
    }
    
    pub fn all() -> VkPipelineCreateFlags {
        VkPipelineCreateFlags {
            disable_optimization: true,
            allow_derivatives: true,
            derivative: true,
            view_index_from_device_index: true,
            dispatch_base: true,
        }
    }
}