// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkPipelineInputAssemblyStateCreateFlags = u32;

#[derive(Debug, Copy, Clone)]
pub struct VkPipelineInputAssemblyStateCreateFlags {
    
}

impl VkRawType<VkPipelineInputAssemblyStateCreateFlags> for RawVkPipelineInputAssemblyStateCreateFlags {
    fn vk_to_wrapped(src: &RawVkPipelineInputAssemblyStateCreateFlags) -> VkPipelineInputAssemblyStateCreateFlags {
        VkPipelineInputAssemblyStateCreateFlags {
            
        }
    }
}

impl VkWrappedType<RawVkPipelineInputAssemblyStateCreateFlags> for VkPipelineInputAssemblyStateCreateFlags {
    fn vk_to_raw(src: &VkPipelineInputAssemblyStateCreateFlags, dst: &mut RawVkPipelineInputAssemblyStateCreateFlags) {
        *dst = 0;
    }
}

pub static STATIC_VK_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_FLAGS : VkPipelineInputAssemblyStateCreateFlags = VkPipelineInputAssemblyStateCreateFlags {
    
};

impl VkDefault for VkPipelineInputAssemblyStateCreateFlags {
    fn vk_default() -> VkPipelineInputAssemblyStateCreateFlags {
        STATIC_VK_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_FLAGS
    }
}