// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkPointClippingBehavior = i32;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkPointClippingBehavior {
    AllClipPlanes = 0,
    UserClipPlanesOnly = 1,
}

impl VkRawType<VkPointClippingBehavior> for RawVkPointClippingBehavior {
    
    fn vk_to_wrapped(src: &RawVkPointClippingBehavior) -> VkPointClippingBehavior {
        unsafe {
            *((src as *const i32) as *const VkPointClippingBehavior)
        }
    }
}

impl VkWrappedType<RawVkPointClippingBehavior> for VkPointClippingBehavior {
    
    fn vk_to_raw(src: &VkPointClippingBehavior, dst: &mut RawVkPointClippingBehavior) {
        *dst = *src as i32
    }
    
    fn vk_default() -> VkPointClippingBehavior {
        VkPointClippingBehavior::AllClipPlanes
    }
}