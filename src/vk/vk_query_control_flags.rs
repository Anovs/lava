// Generated by `scripts/generate_vk.js`

use utils::vk_traits::*;

pub type RawVkQueryControlFlags = u32;

#[derive(Debug, Clone, Copy)]
pub struct VkQueryControlFlags {
    pub precise: bool,
}

impl VkRawType<VkQueryControlFlags> for RawVkQueryControlFlags {
    fn vk_to_wrapped(src: &RawVkQueryControlFlags) -> VkQueryControlFlags {
        VkQueryControlFlags {
            precise: (src & 0x00000001) != 0,
        }
    }
}

impl VkWrappedType<RawVkQueryControlFlags> for VkQueryControlFlags {
    fn vk_to_raw(src: &VkQueryControlFlags, dst: &mut RawVkQueryControlFlags) {
        *dst = 0;
        if src.precise { *dst |= 0x00000001; }
    }
}

impl Default for VkQueryControlFlags {
    fn default() -> VkQueryControlFlags {
        VkQueryControlFlags {
            precise: false,
        }
    }
}

impl VkQueryControlFlags {
    
    pub fn none() -> VkQueryControlFlags {
        VkQueryControlFlags {
            precise: false,
        }
    }
    
    pub fn all() -> VkQueryControlFlags {
        VkQueryControlFlags {
            precise: true,
        }
    }
}

impl VkQueryControlFlags {
    
    pub fn to_u32(&self) -> u32 {
        0
        + if self.precise { 0x00000001 } else { 0 }
    }
}