// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkSamplerYcbcrModelConversion = i32;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkSamplerYcbcrModelConversion {
    RgbIdentity = 0,
    YcbcrIdentity = 1,
    Ycbcr709 = 2,
    Ycbcr601 = 3,
    Ycbcr2020 = 4,
}

impl VkRawType<VkSamplerYcbcrModelConversion> for RawVkSamplerYcbcrModelConversion {
    
    fn vk_to_wrapped(src: &RawVkSamplerYcbcrModelConversion) -> VkSamplerYcbcrModelConversion {
        unsafe {
            *((src as *const i32) as *const VkSamplerYcbcrModelConversion)
        }
    }
}

impl VkWrappedType<RawVkSamplerYcbcrModelConversion> for VkSamplerYcbcrModelConversion {
    
    fn vk_to_raw(src: &VkSamplerYcbcrModelConversion, dst: &mut RawVkSamplerYcbcrModelConversion) {
        *dst = *src as i32
    }
}

impl VkDefault for VkSamplerYcbcrModelConversion {
    
    fn vk_default() -> VkSamplerYcbcrModelConversion {
        VkSamplerYcbcrModelConversion::RgbIdentity
    }
}