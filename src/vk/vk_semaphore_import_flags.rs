// Generated by `scripts/generate_vk.js`

use utils::vk_type::*;

pub type RawVkSemaphoreImportFlags = u32;

#[derive(Debug, Copy, Clone)]
pub struct VkSemaphoreImportFlags {
    temporary: bool,
}

impl VkRawType<VkSemaphoreImportFlags> for RawVkSemaphoreImportFlags {
    fn vk_to_wrapped(src: &RawVkSemaphoreImportFlags) -> VkSemaphoreImportFlags {
        VkSemaphoreImportFlags {
            temporary: (src & 0x00000001) != 0,
        }
    }
}

impl VkWrappedType<RawVkSemaphoreImportFlags> for VkSemaphoreImportFlags {
    fn vk_to_raw(src: &VkSemaphoreImportFlags, dst: &mut RawVkSemaphoreImportFlags) {
        *dst = 0;
        if src.temporary { *dst |= 0x00000001; }
    }
}

pub static STATIC_VK_SEMAPHORE_IMPORT_FLAGS : VkSemaphoreImportFlags = VkSemaphoreImportFlags {
    temporary: false,
};

impl VkDefault for VkSemaphoreImportFlags {
    fn vk_default() -> VkSemaphoreImportFlags {
        STATIC_VK_SEMAPHORE_IMPORT_FLAGS
    }
}