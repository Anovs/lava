// Generated by `scripts/generate_vk.js`

use vk::*;
use std::os::raw::c_char;
use std::ptr::null;
use libc::*;

#[repr(C)]
pub struct RawVkShaderModuleCreateInfo {
    s_type: RawVkStructureType,
    next: *const c_void,
    flags: RawVkShaderModuleCreateFlags,
    code_size: usize,
    code: *const u32,
}

#[derive(Debug)]
pub struct VkShaderModuleCreateInfo {
    pub flags: VkShaderModuleCreateFlags,
    pub code_size: usize,
    pub code: *const u32,
}

impl VkFrom<VkShaderModuleCreateInfo> for RawVkShaderModuleCreateInfo {
    
    fn vk_from(value: &VkShaderModuleCreateInfo) -> Self {
        Self {
            s_type: VkFrom::vk_from(&VkStructureType::ShaderModuleCreateInfo),
            next: null(),
            flags: VkFrom::vk_from(&value.flags),
            code_size: value.code_size,
            code: value.code,
        }
    }
}