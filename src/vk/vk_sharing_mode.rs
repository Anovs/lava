// Generated by `scripts/generate_type.js`

use std::convert::From;
use std::default::Default;

pub type RawVkSharingMode = i32;



#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkSharingMode {
    Exclusive = 0,
    Concurrent = 1
}

impl<'a> From<&'a i32> for VkSharingMode {
    fn from(value: &'a i32) -> Self {
        unsafe { *((value as *const i32) as *const VkSharingMode) }
    }
}

impl<'a> From<&'a VkSharingMode> for i32 {
    fn from(value: &'a VkSharingMode) -> Self {
        *value as i32
    }
}