// Generated by `scripts/generate_vk.js`

use utils::vk_traits::*;

pub type RawVkSparseMemoryBindFlags = u32;

#[derive(Debug, Clone, Copy)]
pub struct VkSparseMemoryBindFlags {
    pub metadata: bool,
}

impl VkRawType<VkSparseMemoryBindFlags> for RawVkSparseMemoryBindFlags {
    fn vk_to_wrapped(src: &RawVkSparseMemoryBindFlags) -> VkSparseMemoryBindFlags {
        VkSparseMemoryBindFlags {
            metadata: (src & 0x00000001) != 0,
        }
    }
}

impl VkWrappedType<RawVkSparseMemoryBindFlags> for VkSparseMemoryBindFlags {
    fn vk_to_raw(src: &VkSparseMemoryBindFlags, dst: &mut RawVkSparseMemoryBindFlags) {
        *dst = 0;
        if src.metadata { *dst |= 0x00000001; }
    }
}

impl Default for VkSparseMemoryBindFlags {
    fn default() -> VkSparseMemoryBindFlags {
        VkSparseMemoryBindFlags {
            metadata: false,
        }
    }
}

impl VkSparseMemoryBindFlags {
    
    pub fn none() -> VkSparseMemoryBindFlags {
        VkSparseMemoryBindFlags {
            metadata: false,
        }
    }
    
    pub fn all() -> VkSparseMemoryBindFlags {
        VkSparseMemoryBindFlags {
            metadata: true,
        }
    }
}