// Generated by `scripts/generate_vk.js`

use vk::*;
use std::os::raw::c_char;
use std::ptr::null;
use libc::*;

#[repr(C)]
pub struct RawVkSurfaceFormatKHR {
    format: RawVkFormat,
    color_space: RawVkColorSpaceKHR,
}

#[derive(Debug)]
pub struct VkSurfaceFormatKHR {
    pub format: VkFormat,
    pub color_space: VkColorSpaceKHR,
}

impl VkFrom<VkSurfaceFormatKHR> for RawVkSurfaceFormatKHR {
    
    fn vk_from(value: &VkSurfaceFormatKHR) -> Self {
        Self {
            format: VkFrom::vk_from(&value.format),
            color_space: VkFrom::vk_from(&value.color_space),
        }
    }
}

impl VkFrom<RawVkSurfaceFormatKHR> for VkSurfaceFormatKHR {
    
    fn vk_from(value: &RawVkSurfaceFormatKHR) -> Self {
        Self {
            format: VkFrom::vk_from(&value.format),
            color_space: VkFrom::vk_from(&value.color_space),
        }
    }
}