// Generated by `scripts/generate_vk.js`

use vk::*;
use std::os::raw::c_char;

pub type RawVkSurfaceTransformFlagsKHR = u32;

#[derive(Debug)]
#[derive(Copy, Clone)]
pub struct VkSurfaceTransformFlagsKHR {
    pub identity_khr: bool,
    pub rotate_90_khr: bool,
    pub rotate_180_khr: bool,
    pub rotate_270_khr: bool,
    pub horizontal_mirror_khr: bool,
    pub horizontal_mirror_rotate_90_khr: bool,
    pub horizontal_mirror_rotate_180_khr: bool,
    pub horizontal_mirror_rotate_270_khr: bool,
    pub inherit_khr: bool,
}

impl VkFlags for VkSurfaceTransformFlagsKHR {
    
    fn none() -> Self {
        Self {
            identity_khr: false,
            rotate_90_khr: false,
            rotate_180_khr: false,
            rotate_270_khr: false,
            horizontal_mirror_khr: false,
            horizontal_mirror_rotate_90_khr: false,
            horizontal_mirror_rotate_180_khr: false,
            horizontal_mirror_rotate_270_khr: false,
            inherit_khr: false,
        }
    }
    
    fn all() -> Self {
        Self {
            identity_khr: true,
            rotate_90_khr: true,
            rotate_180_khr: true,
            rotate_270_khr: true,
            horizontal_mirror_khr: true,
            horizontal_mirror_rotate_90_khr: true,
            horizontal_mirror_rotate_180_khr: true,
            horizontal_mirror_rotate_270_khr: true,
            inherit_khr: true,
        }
    }
}

impl VkFrom<VkSurfaceTransformFlagsKHR> for RawVkSurfaceTransformFlagsKHR {
    
    fn vk_from(value: &VkSurfaceTransformFlagsKHR) -> Self { {
            0
            + (if value.identity_khr { 0x00000001 } else { 0 })
            + (if value.rotate_90_khr { 0x00000002 } else { 0 })
            + (if value.rotate_180_khr { 0x00000004 } else { 0 })
            + (if value.rotate_270_khr { 0x00000008 } else { 0 })
            + (if value.horizontal_mirror_khr { 0x00000010 } else { 0 })
            + (if value.horizontal_mirror_rotate_90_khr { 0x00000020 } else { 0 })
            + (if value.horizontal_mirror_rotate_180_khr { 0x00000040 } else { 0 })
            + (if value.horizontal_mirror_rotate_270_khr { 0x00000080 } else { 0 })
            + (if value.inherit_khr { 0x00000100 } else { 0 })
        }
    }
}

impl VkFrom<RawVkSurfaceTransformFlagsKHR> for VkSurfaceTransformFlagsKHR {
    
    fn vk_from(value: &RawVkSurfaceTransformFlagsKHR) -> Self {
        Self {
            identity_khr: (value & 0x00000001) != 0,
            rotate_90_khr: (value & 0x00000002) != 0,
            rotate_180_khr: (value & 0x00000004) != 0,
            rotate_270_khr: (value & 0x00000008) != 0,
            horizontal_mirror_khr: (value & 0x00000010) != 0,
            horizontal_mirror_rotate_90_khr: (value & 0x00000020) != 0,
            horizontal_mirror_rotate_180_khr: (value & 0x00000040) != 0,
            horizontal_mirror_rotate_270_khr: (value & 0x00000080) != 0,
            inherit_khr: (value & 0x00000100) != 0,
        }
    }
}