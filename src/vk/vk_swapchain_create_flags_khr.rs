// Generated by `scripts/generate_vk.js`

use vk::*;
use std::os::raw::c_char;

pub type RawVkSwapchainCreateFlagsKHR = u32;

#[derive(Debug)]
#[derive(Copy, Clone)]
pub struct VkSwapchainCreateFlagsKHR {
    pub split_instance_bind_regions_khr: bool,
    pub protected_khr: bool,
}

impl VkFrom<VkSwapchainCreateFlagsKHR> for RawVkSwapchainCreateFlagsKHR {
    
    fn vk_from(value: &VkSwapchainCreateFlagsKHR) -> Self { {
            0
             + (if value.split_instance_bind_regions_khr { 0x00000001 } else { 0 })
             + (if value.protected_khr { 0x00000002 } else { 0 })
        }
    }
}

impl VkFrom<RawVkSwapchainCreateFlagsKHR> for VkSwapchainCreateFlagsKHR {
    
    fn vk_from(value: &RawVkSwapchainCreateFlagsKHR) -> Self {
        Self {
            split_instance_bind_regions_khr: (value & 0x00000001) > 0,
            protected_khr: (value & 0x00000002) > 0,
        }
    }
}