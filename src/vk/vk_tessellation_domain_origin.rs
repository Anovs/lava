// Generated by `scripts/generate.js`

use utils::vk_traits::*;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkTessellationDomainOrigin {
    UpperLeft = 0,
    LowerLeft = 1,
}

pub type RawVkTessellationDomainOrigin = i32;

impl VkWrappedType<RawVkTessellationDomainOrigin> for VkTessellationDomainOrigin {
    fn vk_to_raw(src: &VkTessellationDomainOrigin, dst: &mut RawVkTessellationDomainOrigin) {
        *dst = *src as i32
    }
}

impl VkRawType<VkTessellationDomainOrigin> for RawVkTessellationDomainOrigin {
    fn vk_to_wrapped(src: &RawVkTessellationDomainOrigin) -> VkTessellationDomainOrigin {
        unsafe {
            *((src as *const i32) as *const VkTessellationDomainOrigin)
        }
    }
}

impl Default for VkTessellationDomainOrigin {
    fn default() -> VkTessellationDomainOrigin {
        VkTessellationDomainOrigin::UpperLeft
    }
}