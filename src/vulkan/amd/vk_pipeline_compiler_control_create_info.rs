// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};
use vulkan::amd::{VkPipelineCompilerControlFlags,RawVkPipelineCompilerControlFlags};

/// Wrapper for [VkPipelineCompilerControlCreateInfoAMD](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkPipelineCompilerControlCreateInfoAMD.html).
#[derive(Debug, Clone)]
pub struct VkPipelineCompilerControlCreateInfo {
    pub compiler_control_flags: VkPipelineCompilerControlFlags,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkPipelineCompilerControlCreateInfo {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub compiler_control_flags: RawVkPipelineCompilerControlFlags,
}

impl VkWrappedType<RawVkPipelineCompilerControlCreateInfo> for VkPipelineCompilerControlCreateInfo {
    fn vk_to_raw(src: &VkPipelineCompilerControlCreateInfo, dst: &mut RawVkPipelineCompilerControlCreateInfo) {
        dst.s_type = vk_to_raw_value(&VkStructureType::PipelineCompilerControlCreateInfoAmd);
        dst.next = ptr::null_mut();
        dst.compiler_control_flags = vk_to_raw_value(&src.compiler_control_flags);
    }
}

impl VkRawType<VkPipelineCompilerControlCreateInfo> for RawVkPipelineCompilerControlCreateInfo {
    fn vk_to_wrapped(src: &RawVkPipelineCompilerControlCreateInfo) -> VkPipelineCompilerControlCreateInfo {
        VkPipelineCompilerControlCreateInfo {
            compiler_control_flags: RawVkPipelineCompilerControlFlags::vk_to_wrapped(&src.compiler_control_flags),
        }
    }
}

impl Default for VkPipelineCompilerControlCreateInfo {
    fn default() -> VkPipelineCompilerControlCreateInfo {
        VkPipelineCompilerControlCreateInfo {
            compiler_control_flags: Default::default(),
        }
    }
}

impl VkSetup for VkPipelineCompilerControlCreateInfo {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkPipelineCompilerControlCreateInfo {
    fn vk_free(&self) {
        
    }
}