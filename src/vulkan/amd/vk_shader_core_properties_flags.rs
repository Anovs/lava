// Generated by `scripts/generate.js`

use utils::vk_traits::*;

/// Wrapper for [VkShaderCorePropertiesFlagsAMD](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkShaderCorePropertiesFlagsAMD.html).
///
/// Use the macro `VkShaderCorePropertiesFlags!` as an alternative method to create a structure. For example, these two snippets return the same value:
/// ```
/// VkShaderCorePropertiesFlags!()
/// ```
/// ```
/// VkShaderCorePropertiesFlags {
/// }
/// ```
#[derive(Debug, Clone)]
pub struct VkShaderCorePropertiesFlags {
    
}

#[doc(hidden)]
pub type RawVkShaderCorePropertiesFlags = u32;

impl VkWrappedType<RawVkShaderCorePropertiesFlags> for VkShaderCorePropertiesFlags {
    fn vk_to_raw(src: &VkShaderCorePropertiesFlags, dst: &mut RawVkShaderCorePropertiesFlags) {
        *dst = 0;
    }
}

impl VkRawType<VkShaderCorePropertiesFlags> for RawVkShaderCorePropertiesFlags {
    fn vk_to_wrapped(src: &RawVkShaderCorePropertiesFlags) -> VkShaderCorePropertiesFlags {
        VkShaderCorePropertiesFlags {
            
        }
    }
}

impl Default for VkShaderCorePropertiesFlags {
    fn default() -> VkShaderCorePropertiesFlags {
        VkShaderCorePropertiesFlags {
            
        }
    }
}

impl VkShaderCorePropertiesFlags {
    
    /// Return a structure with all flags to `false`.
    pub fn none() -> Self {
        VkShaderCorePropertiesFlags {
            
        }
    }
    
    /// Return a structure with all flags to `true`.
    pub fn all() -> Self {
        VkShaderCorePropertiesFlags {
            
        }
    }
    
    /// Return the numerical bit flags corresponding to the structure (as described in the Vulkan specs).
    pub fn to_u32(&self) -> u32 {
        0
    }
    
    /// Create a structure corresponding to the specified numerical bit flags.
    pub fn from_u32(value: u32) -> Self {
        VkShaderCorePropertiesFlags {
            
        }
    }
}

#[doc(hidden)]
#[macro_export]
macro_rules! VkShaderCorePropertiesFlags {
    ( $( $x:ident ),* ) => {
        VkShaderCorePropertiesFlags {
            $($x: true,)*
            ..VkShaderCorePropertiesFlags::none()
        }
    }
}