// Generated by `scripts/generate.js`

use utils::vk_traits::*;

/// Wrapper for [VkConservativeRasterizationModeEXT](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkConservativeRasterizationModeEXT.html).
#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkConservativeRasterizationMode {
    Disabled = 0,
    Overestimate = 1,
    Underestimate = 2,
}

#[doc(hidden)]
pub type RawVkConservativeRasterizationMode = i32;

impl VkWrappedType<RawVkConservativeRasterizationMode> for VkConservativeRasterizationMode {
    fn vk_to_raw(src: &VkConservativeRasterizationMode, dst: &mut RawVkConservativeRasterizationMode) {
        *dst = *src as i32
    }
}

impl VkRawType<VkConservativeRasterizationMode> for RawVkConservativeRasterizationMode {
    fn vk_to_wrapped(src: &RawVkConservativeRasterizationMode) -> VkConservativeRasterizationMode {
        unsafe {
            *((src as *const i32) as *const VkConservativeRasterizationMode)
        }
    }
}

impl Default for VkConservativeRasterizationMode {
    fn default() -> VkConservativeRasterizationMode {
        VkConservativeRasterizationMode::Disabled
    }
}