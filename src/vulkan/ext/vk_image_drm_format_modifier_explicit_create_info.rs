// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};
use vulkan::vk::{VkSubresourceLayout,RawVkSubresourceLayout};

/// Wrapper for [VkImageDrmFormatModifierExplicitCreateInfoEXT](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkImageDrmFormatModifierExplicitCreateInfoEXT.html).
#[derive(Debug, Clone)]
pub struct VkImageDrmFormatModifierExplicitCreateInfo<'a> {
    pub drm_format_modifier: usize,
    pub plane_layouts: &'a [VkSubresourceLayout],
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkImageDrmFormatModifierExplicitCreateInfo {
    pub s_type: RawVkStructureType,
    pub next: *const c_void,
    pub drm_format_modifier: u64,
    pub drm_format_modifier_plane_count: u32,
    pub plane_layouts: *mut RawVkSubresourceLayout,
}

impl<'a> VkWrappedType<RawVkImageDrmFormatModifierExplicitCreateInfo> for VkImageDrmFormatModifierExplicitCreateInfo<'a> {
    fn vk_to_raw(src: &VkImageDrmFormatModifierExplicitCreateInfo, dst: &mut RawVkImageDrmFormatModifierExplicitCreateInfo) {
        dst.s_type = vk_to_raw_value(&VkStructureType::ImageDrmFormatModifierExplicitCreateInfoExt);
        dst.next = ptr::null();
        dst.drm_format_modifier = vk_to_raw_value(&src.drm_format_modifier);
        dst.drm_format_modifier_plane_count = src.plane_layouts.len() as u32;
        dst.plane_layouts = new_ptr_vk_array(src.plane_layouts);
    }
}

impl Default for VkImageDrmFormatModifierExplicitCreateInfo<'static> {
    fn default() -> VkImageDrmFormatModifierExplicitCreateInfo<'static> {
        VkImageDrmFormatModifierExplicitCreateInfo {
            drm_format_modifier: 0,
            plane_layouts: &[],
        }
    }
}

impl<'a> VkSetup for VkImageDrmFormatModifierExplicitCreateInfo<'a> {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkImageDrmFormatModifierExplicitCreateInfo {
    fn vk_free(&mut self) {
        free_vk_ptr_array(self.drm_format_modifier_plane_count as usize, self.plane_layouts);
    }
}