// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};

/// Wrapper for [VkPhysicalDeviceSubgroupSizeControlFeaturesEXT](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkPhysicalDeviceSubgroupSizeControlFeaturesEXT.html).
#[derive(Debug, Clone)]
pub struct VkPhysicalDeviceSubgroupSizeControlFeatures {
    pub subgroup_size_control: bool,
    pub compute_full_subgroups: bool,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkPhysicalDeviceSubgroupSizeControlFeatures {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub subgroup_size_control: u32,
    pub compute_full_subgroups: u32,
}

impl VkWrappedType<RawVkPhysicalDeviceSubgroupSizeControlFeatures> for VkPhysicalDeviceSubgroupSizeControlFeatures {
    fn vk_to_raw(src: &VkPhysicalDeviceSubgroupSizeControlFeatures, dst: &mut RawVkPhysicalDeviceSubgroupSizeControlFeatures) {
        dst.s_type = vk_to_raw_value(&VkStructureType::PhysicalDeviceSubgroupSizeControlFeaturesExt);
        dst.next = ptr::null_mut();
        dst.subgroup_size_control = vk_to_raw_value(&src.subgroup_size_control);
        dst.compute_full_subgroups = vk_to_raw_value(&src.compute_full_subgroups);
    }
}

impl VkRawType<VkPhysicalDeviceSubgroupSizeControlFeatures> for RawVkPhysicalDeviceSubgroupSizeControlFeatures {
    fn vk_to_wrapped(src: &RawVkPhysicalDeviceSubgroupSizeControlFeatures) -> VkPhysicalDeviceSubgroupSizeControlFeatures {
        VkPhysicalDeviceSubgroupSizeControlFeatures {
            subgroup_size_control: u32::vk_to_wrapped(&src.subgroup_size_control),
            compute_full_subgroups: u32::vk_to_wrapped(&src.compute_full_subgroups),
        }
    }
}

impl Default for VkPhysicalDeviceSubgroupSizeControlFeatures {
    fn default() -> VkPhysicalDeviceSubgroupSizeControlFeatures {
        VkPhysicalDeviceSubgroupSizeControlFeatures {
            subgroup_size_control: false,
            compute_full_subgroups: false,
        }
    }
}

impl VkSetup for VkPhysicalDeviceSubgroupSizeControlFeatures {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkPhysicalDeviceSubgroupSizeControlFeatures {
    fn vk_free(&self) {
        
    }
}