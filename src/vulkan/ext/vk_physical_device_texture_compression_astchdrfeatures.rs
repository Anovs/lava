// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};

/// Wrapper for [VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT.html).
#[derive(Debug, Clone)]
pub struct VkPhysicalDeviceTextureCompressionASTCHDRFeatures {
    pub texture_compression_astc_hdr: bool,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkPhysicalDeviceTextureCompressionASTCHDRFeatures {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub texture_compression_astc_hdr: u32,
}

impl VkWrappedType<RawVkPhysicalDeviceTextureCompressionASTCHDRFeatures> for VkPhysicalDeviceTextureCompressionASTCHDRFeatures {
    fn vk_to_raw(src: &VkPhysicalDeviceTextureCompressionASTCHDRFeatures, dst: &mut RawVkPhysicalDeviceTextureCompressionASTCHDRFeatures) {
        dst.s_type = vk_to_raw_value(&VkStructureType::PhysicalDeviceTextureCompressionAstcHdrFeaturesExt);
        dst.next = ptr::null_mut();
        dst.texture_compression_astc_hdr = vk_to_raw_value(&src.texture_compression_astc_hdr);
    }
}

impl VkRawType<VkPhysicalDeviceTextureCompressionASTCHDRFeatures> for RawVkPhysicalDeviceTextureCompressionASTCHDRFeatures {
    fn vk_to_wrapped(src: &RawVkPhysicalDeviceTextureCompressionASTCHDRFeatures) -> VkPhysicalDeviceTextureCompressionASTCHDRFeatures {
        VkPhysicalDeviceTextureCompressionASTCHDRFeatures {
            texture_compression_astc_hdr: u32::vk_to_wrapped(&src.texture_compression_astc_hdr),
        }
    }
}

impl Default for VkPhysicalDeviceTextureCompressionASTCHDRFeatures {
    fn default() -> VkPhysicalDeviceTextureCompressionASTCHDRFeatures {
        VkPhysicalDeviceTextureCompressionASTCHDRFeatures {
            texture_compression_astc_hdr: false,
        }
    }
}

impl VkSetup for VkPhysicalDeviceTextureCompressionASTCHDRFeatures {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkPhysicalDeviceTextureCompressionASTCHDRFeatures {
    fn vk_free(&self) {
        
    }
}