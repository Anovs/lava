// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::ext::{VkPipelineCreationFeedbackFlags,RawVkPipelineCreationFeedbackFlags};

/// Wrapper for [VkPipelineCreationFeedbackEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkPipelineCreationFeedbackEXT.html).
#[derive(Debug, Clone)]
pub struct VkPipelineCreationFeedback {
    pub flags: VkPipelineCreationFeedbackFlags,
    pub duration: usize,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkPipelineCreationFeedback {
    pub flags: RawVkPipelineCreationFeedbackFlags,
    pub duration: u64,
}

impl VkWrappedType<RawVkPipelineCreationFeedback> for VkPipelineCreationFeedback {
    fn vk_to_raw(src: &VkPipelineCreationFeedback, dst: &mut RawVkPipelineCreationFeedback) {
        dst.flags = vk_to_raw_value(&src.flags);
        dst.duration = vk_to_raw_value(&src.duration);
    }
}

impl VkRawType<VkPipelineCreationFeedback> for RawVkPipelineCreationFeedback {
    fn vk_to_wrapped(src: &RawVkPipelineCreationFeedback) -> VkPipelineCreationFeedback {
        VkPipelineCreationFeedback {
            flags: RawVkPipelineCreationFeedbackFlags::vk_to_wrapped(&src.flags),
            duration: u64::vk_to_wrapped(&src.duration),
        }
    }
}

impl Default for VkPipelineCreationFeedback {
    fn default() -> VkPipelineCreationFeedback {
        VkPipelineCreationFeedback {
            flags: Default::default(),
            duration: 0,
        }
    }
}

impl VkSetup for VkPipelineCreationFeedback {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkPipelineCreationFeedback {
    fn vk_free(&self) {
        
    }
}