// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};
use vulkan::ext::{VkPipelineCreationFeedback,RawVkPipelineCreationFeedback};

/// Wrapper for [VkPipelineCreationFeedbackCreateInfoEXT](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkPipelineCreationFeedbackCreateInfoEXT.html).
#[derive(Debug, Clone)]
pub struct VkPipelineCreationFeedbackCreateInfo {
    pub pipeline_creation_feedback: VkPipelineCreationFeedback,
    pub pipeline_stage_creation_feedbacks: Vec<VkPipelineCreationFeedback>,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkPipelineCreationFeedbackCreateInfo {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub pipeline_creation_feedback: *mut RawVkPipelineCreationFeedback,
    pub pipeline_stage_creation_feedback_count: u32,
    pub pipeline_stage_creation_feedbacks: *mut RawVkPipelineCreationFeedback,
}

impl VkWrappedType<RawVkPipelineCreationFeedbackCreateInfo> for VkPipelineCreationFeedbackCreateInfo {
    fn vk_to_raw(src: &VkPipelineCreationFeedbackCreateInfo, dst: &mut RawVkPipelineCreationFeedbackCreateInfo) {
        dst.s_type = vk_to_raw_value(&VkStructureType::PipelineCreationFeedbackCreateInfoExt);
        dst.next = ptr::null_mut();
        dst.pipeline_creation_feedback = new_ptr_vk_value(&src.pipeline_creation_feedback);
        dst.pipeline_stage_creation_feedback_count = src.pipeline_stage_creation_feedbacks.len() as u32;
        dst.pipeline_stage_creation_feedbacks = new_ptr_vk_array(&src.pipeline_stage_creation_feedbacks);
    }
}

impl VkRawType<VkPipelineCreationFeedbackCreateInfo> for RawVkPipelineCreationFeedbackCreateInfo {
    fn vk_to_wrapped(src: &RawVkPipelineCreationFeedbackCreateInfo) -> VkPipelineCreationFeedbackCreateInfo {
        VkPipelineCreationFeedbackCreateInfo {
            pipeline_creation_feedback: new_vk_value(src.pipeline_creation_feedback),
            pipeline_stage_creation_feedbacks: new_vk_array(src.pipeline_stage_creation_feedback_count, src.pipeline_stage_creation_feedbacks),
        }
    }
}

impl Default for VkPipelineCreationFeedbackCreateInfo {
    fn default() -> VkPipelineCreationFeedbackCreateInfo {
        VkPipelineCreationFeedbackCreateInfo {
            pipeline_creation_feedback: Default::default(),
            pipeline_stage_creation_feedbacks: Vec::new(),
        }
    }
}

impl VkSetup for VkPipelineCreationFeedbackCreateInfo {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        VkSetup::vk_setup(&mut self.pipeline_creation_feedback, fn_table);
    }
}

impl VkFree for RawVkPipelineCreationFeedbackCreateInfo {
    fn vk_free(&self) {
        free_vk_ptr(self.pipeline_creation_feedback);
        free_vk_ptr_array(self.pipeline_stage_creation_feedback_count as usize, self.pipeline_stage_creation_feedbacks);
    }
}