// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};
use vulkan::ext::{VkLineRasterizationMode,RawVkLineRasterizationMode};

/// Wrapper for [VkPipelineRasterizationLineStateCreateInfoEXT](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkPipelineRasterizationLineStateCreateInfoEXT.html).
#[derive(Debug, Clone)]
pub struct VkPipelineRasterizationLineStateCreateInfo {
    pub line_rasterization_mode: VkLineRasterizationMode,
    pub stippled_line_enable: bool,
    pub line_stipple_factor: usize,
    pub line_stipple_pattern: u16,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkPipelineRasterizationLineStateCreateInfo {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub line_rasterization_mode: RawVkLineRasterizationMode,
    pub stippled_line_enable: u32,
    pub line_stipple_factor: u32,
    pub line_stipple_pattern: u16,
}

impl VkWrappedType<RawVkPipelineRasterizationLineStateCreateInfo> for VkPipelineRasterizationLineStateCreateInfo {
    fn vk_to_raw(src: &VkPipelineRasterizationLineStateCreateInfo, dst: &mut RawVkPipelineRasterizationLineStateCreateInfo) {
        dst.s_type = vk_to_raw_value(&VkStructureType::PipelineRasterizationLineStateCreateInfoExt);
        dst.next = ptr::null_mut();
        dst.line_rasterization_mode = vk_to_raw_value(&src.line_rasterization_mode);
        dst.stippled_line_enable = vk_to_raw_value(&src.stippled_line_enable);
        dst.line_stipple_factor = vk_to_raw_value(&src.line_stipple_factor);
        dst.line_stipple_pattern = src.line_stipple_pattern;
    }
}

impl VkRawType<VkPipelineRasterizationLineStateCreateInfo> for RawVkPipelineRasterizationLineStateCreateInfo {
    fn vk_to_wrapped(src: &RawVkPipelineRasterizationLineStateCreateInfo) -> VkPipelineRasterizationLineStateCreateInfo {
        VkPipelineRasterizationLineStateCreateInfo {
            line_rasterization_mode: RawVkLineRasterizationMode::vk_to_wrapped(&src.line_rasterization_mode),
            stippled_line_enable: u32::vk_to_wrapped(&src.stippled_line_enable),
            line_stipple_factor: u32::vk_to_wrapped(&src.line_stipple_factor),
            line_stipple_pattern: src.line_stipple_pattern,
        }
    }
}

impl Default for VkPipelineRasterizationLineStateCreateInfo {
    fn default() -> VkPipelineRasterizationLineStateCreateInfo {
        VkPipelineRasterizationLineStateCreateInfo {
            line_rasterization_mode: Default::default(),
            stippled_line_enable: false,
            line_stipple_factor: 0,
            line_stipple_pattern: 0,
        }
    }
}

impl VkSetup for VkPipelineRasterizationLineStateCreateInfo {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkPipelineRasterizationLineStateCreateInfo {
    fn vk_free(&self) {
        
    }
}