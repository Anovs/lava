// Generated by `scripts/generate.js`

use utils::vk_traits::*;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkTimeDomain {
    Device = 0,
    ClockMonotonic = 1,
    ClockMonotonicRaw = 2,
    QueryPerformanceCounter = 3,
}

pub type RawVkTimeDomain = i32;

impl VkWrappedType<RawVkTimeDomain> for VkTimeDomain {
    fn vk_to_raw(src: &VkTimeDomain, dst: &mut RawVkTimeDomain) {
        *dst = *src as i32
    }
}

impl VkRawType<VkTimeDomain> for RawVkTimeDomain {
    fn vk_to_wrapped(src: &RawVkTimeDomain) -> VkTimeDomain {
        unsafe {
            *((src as *const i32) as *const VkTimeDomain)
        }
    }
}

impl Default for VkTimeDomain {
    fn default() -> VkTimeDomain {
        VkTimeDomain::Device
    }
}