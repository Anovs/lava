// Generated by `scripts/generate.js`

use utils::vk_traits::*;

/// Wrapper for [VkValidationFeatureEnableEXT](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkValidationFeatureEnableEXT.html)
#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkValidationFeatureEnable {
    GpuAssisted = 0,
    GpuAssistedReserveBindingSlot = 1,
}

#[doc(hidden)]
pub type RawVkValidationFeatureEnable = i32;

impl VkWrappedType<RawVkValidationFeatureEnable> for VkValidationFeatureEnable {
    fn vk_to_raw(src: &VkValidationFeatureEnable, dst: &mut RawVkValidationFeatureEnable) {
        *dst = *src as i32
    }
}

impl VkRawType<VkValidationFeatureEnable> for RawVkValidationFeatureEnable {
    fn vk_to_wrapped(src: &RawVkValidationFeatureEnable) -> VkValidationFeatureEnable {
        unsafe {
            *((src as *const i32) as *const VkValidationFeatureEnable)
        }
    }
}

impl Default for VkValidationFeatureEnable {
    fn default() -> VkValidationFeatureEnable {
        VkValidationFeatureEnable::GpuAssisted
    }
}