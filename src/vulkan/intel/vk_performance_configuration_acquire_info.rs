// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};
use vulkan::intel::{VkPerformanceConfigurationType,RawVkPerformanceConfigurationType};

/// Wrapper for [VkPerformanceConfigurationAcquireInfoINTEL](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkPerformanceConfigurationAcquireInfoINTEL.html).
#[derive(Debug, Clone)]
pub struct VkPerformanceConfigurationAcquireInfo {
    pub type_: VkPerformanceConfigurationType,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkPerformanceConfigurationAcquireInfo {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub type_: RawVkPerformanceConfigurationType,
}

impl VkWrappedType<RawVkPerformanceConfigurationAcquireInfo> for VkPerformanceConfigurationAcquireInfo {
    fn vk_to_raw(src: &VkPerformanceConfigurationAcquireInfo, dst: &mut RawVkPerformanceConfigurationAcquireInfo) {
        dst.s_type = vk_to_raw_value(&VkStructureType::PerformanceConfigurationAcquireInfoIntel);
        dst.next = ptr::null_mut();
        dst.type_ = vk_to_raw_value(&src.type_);
    }
}

impl VkRawType<VkPerformanceConfigurationAcquireInfo> for RawVkPerformanceConfigurationAcquireInfo {
    fn vk_to_wrapped(src: &RawVkPerformanceConfigurationAcquireInfo) -> VkPerformanceConfigurationAcquireInfo {
        VkPerformanceConfigurationAcquireInfo {
            type_: RawVkPerformanceConfigurationType::vk_to_wrapped(&src.type_),
        }
    }
}

impl Default for VkPerformanceConfigurationAcquireInfo {
    fn default() -> VkPerformanceConfigurationAcquireInfo {
        VkPerformanceConfigurationAcquireInfo {
            type_: Default::default(),
        }
    }
}

impl VkSetup for VkPerformanceConfigurationAcquireInfo {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkPerformanceConfigurationAcquireInfo {
    fn vk_free(&self) {
        
    }
}