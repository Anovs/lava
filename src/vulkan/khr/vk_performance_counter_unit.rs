// Generated by `scripts/generate.js`

use utils::vk_traits::*;

/// Wrapper for [VkPerformanceCounterUnitKHR](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkPerformanceCounterUnitKHR.html).
#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkPerformanceCounterUnit {
    Generic = 0,
    Percentage = 1,
    Nanoseconds = 2,
    Bytes = 3,
    BytesPerSecond = 4,
    Kelvin = 5,
    Watts = 6,
    Volts = 7,
    Amps = 8,
    Hertz = 9,
    Cycles = 10,
}

#[doc(hidden)]
pub type RawVkPerformanceCounterUnit = i32;

impl VkWrappedType<RawVkPerformanceCounterUnit> for VkPerformanceCounterUnit {
    fn vk_to_raw(src: &VkPerformanceCounterUnit, dst: &mut RawVkPerformanceCounterUnit) {
        *dst = *src as i32
    }
}

impl VkRawType<VkPerformanceCounterUnit> for RawVkPerformanceCounterUnit {
    fn vk_to_wrapped(src: &RawVkPerformanceCounterUnit) -> VkPerformanceCounterUnit {
        unsafe {
            *((src as *const i32) as *const VkPerformanceCounterUnit)
        }
    }
}

impl Default for VkPerformanceCounterUnit {
    fn default() -> VkPerformanceCounterUnit {
        VkPerformanceCounterUnit::Generic
    }
}