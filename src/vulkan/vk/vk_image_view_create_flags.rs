// Generated by `scripts/generate.js`

use utils::vk_traits::*;

/// Wrapper for [VkImageViewCreateFlagBits](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkImageViewCreateFlagBits.html)
#[derive(Debug, Clone, Copy)]
pub struct VkImageViewCreateFlags {
    pub fragment_density_map_dynamic_ext: bool,
}

#[doc(hidden)]
pub type RawVkImageViewCreateFlags = u32;

impl VkWrappedType<RawVkImageViewCreateFlags> for VkImageViewCreateFlags {
    fn vk_to_raw(src: &VkImageViewCreateFlags, dst: &mut RawVkImageViewCreateFlags) {
        *dst = 0;
        if src.fragment_density_map_dynamic_ext { *dst |= 0x00000001; }
    }
}

impl VkRawType<VkImageViewCreateFlags> for RawVkImageViewCreateFlags {
    fn vk_to_wrapped(src: &RawVkImageViewCreateFlags) -> VkImageViewCreateFlags {
        VkImageViewCreateFlags {
            fragment_density_map_dynamic_ext: (src & 0x00000001) != 0,
        }
    }
}

impl Default for VkImageViewCreateFlags {
    fn default() -> VkImageViewCreateFlags {
        VkImageViewCreateFlags {
            fragment_density_map_dynamic_ext: false,
        }
    }
}

impl VkImageViewCreateFlags {
    
    pub fn none() -> VkImageViewCreateFlags {
        VkImageViewCreateFlags {
            fragment_density_map_dynamic_ext: false,
        }
    }
    
    pub fn all() -> VkImageViewCreateFlags {
        VkImageViewCreateFlags {
            fragment_density_map_dynamic_ext: true,
        }
    }
}

#[macro_export]
macro_rules! VkImageViewCreateFlags {
    ( $( $x:ident ),* ) => {
        VkImageViewCreateFlags {
            $($x: true,)*
            ..VkImageViewCreateFlags::none()
        }
    }
}

impl VkImageViewCreateFlags {
    
    pub fn to_u32(&self) -> u32 {
        0
        + if self.fragment_density_map_dynamic_ext { 0x00000001 } else { 0 }
    }
    
    pub fn from_u32(value: u32) -> VkImageViewCreateFlags {
        VkImageViewCreateFlags {
            fragment_density_map_dynamic_ext: value & 0x00000001 > 0,
        }
    }
}