// Generated by `scripts/generate.js`

use utils::vk_traits::*;

#[derive(Debug, Clone, Copy)]
pub struct VkInstanceCreateFlags {
    
}

pub type RawVkInstanceCreateFlags = u32;

impl VkWrappedType<RawVkInstanceCreateFlags> for VkInstanceCreateFlags {
    fn vk_to_raw(src: &VkInstanceCreateFlags, dst: &mut RawVkInstanceCreateFlags) {
        *dst = 0;
    }
}

impl VkRawType<VkInstanceCreateFlags> for RawVkInstanceCreateFlags {
    fn vk_to_wrapped(src: &RawVkInstanceCreateFlags) -> VkInstanceCreateFlags {
        VkInstanceCreateFlags {
            
        }
    }
}

impl Default for VkInstanceCreateFlags {
    fn default() -> VkInstanceCreateFlags {
        VkInstanceCreateFlags {
            
        }
    }
}

impl VkInstanceCreateFlags {
    
    pub fn none() -> VkInstanceCreateFlags {
        VkInstanceCreateFlags {
            
        }
    }
    
    pub fn all() -> VkInstanceCreateFlags {
        VkInstanceCreateFlags {
            
        }
    }
}

#[macro_export]
macro_rules! VkInstanceCreateFlags {
    ( $( $x:ident ),* ) => {
        VkInstanceCreateFlags {
            $($x: true,)*
            ..VkInstanceCreateFlags::none()
        }
    }
}

impl VkInstanceCreateFlags {
    
    pub fn to_u32(&self) -> u32 {
        0
    }
}