// Generated by `scripts/generate.js`

use std::os::raw::c_char;
use std::ops::Deref;
use std::ptr;
use std::cmp;
use std::mem;
use utils::c_bindings::*;
use utils::vk_convert::*;
use utils::vk_null::*;
use utils::vk_ptr::*;
use utils::vk_traits::*;
use vulkan::vk::*;
use vulkan::vk::{VkStructureType,RawVkStructureType};

/// Wrapper for [VkPhysicalDeviceTimelineSemaphoreProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkPhysicalDeviceTimelineSemaphoreProperties.html).
#[derive(Debug, Clone)]
pub struct VkPhysicalDeviceTimelineSemaphoreProperties {
    pub max_timeline_semaphore_value_difference: usize,
}

#[doc(hidden)]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RawVkPhysicalDeviceTimelineSemaphoreProperties {
    pub s_type: RawVkStructureType,
    pub next: *mut c_void,
    pub max_timeline_semaphore_value_difference: u64,
}

impl VkWrappedType<RawVkPhysicalDeviceTimelineSemaphoreProperties> for VkPhysicalDeviceTimelineSemaphoreProperties {
    fn vk_to_raw(src: &VkPhysicalDeviceTimelineSemaphoreProperties, dst: &mut RawVkPhysicalDeviceTimelineSemaphoreProperties) {
        dst.s_type = vk_to_raw_value(&VkStructureType::PhysicalDeviceTimelineSemaphoreProperties);
        dst.next = ptr::null_mut();
        dst.max_timeline_semaphore_value_difference = vk_to_raw_value(&src.max_timeline_semaphore_value_difference);
    }
}

impl VkRawType<VkPhysicalDeviceTimelineSemaphoreProperties> for RawVkPhysicalDeviceTimelineSemaphoreProperties {
    fn vk_to_wrapped(src: &RawVkPhysicalDeviceTimelineSemaphoreProperties) -> VkPhysicalDeviceTimelineSemaphoreProperties {
        VkPhysicalDeviceTimelineSemaphoreProperties {
            max_timeline_semaphore_value_difference: u64::vk_to_wrapped(&src.max_timeline_semaphore_value_difference),
        }
    }
}

impl Default for VkPhysicalDeviceTimelineSemaphoreProperties {
    fn default() -> VkPhysicalDeviceTimelineSemaphoreProperties {
        VkPhysicalDeviceTimelineSemaphoreProperties {
            max_timeline_semaphore_value_difference: 0,
        }
    }
}

impl VkSetup for VkPhysicalDeviceTimelineSemaphoreProperties {
    fn vk_setup(&mut self, fn_table: *mut VkFunctionTable) {
        
    }
}

impl VkFree for RawVkPhysicalDeviceTimelineSemaphoreProperties {
    fn vk_free(&self) {
        
    }
}