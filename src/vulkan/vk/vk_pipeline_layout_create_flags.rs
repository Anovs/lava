// Generated by `scripts/generate.js`

use utils::vk_traits::*;

/// Wrapper for [VkPipelineLayoutCreateFlags](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkPipelineLayoutCreateFlags.html).
///
/// Use the macro `VkPipelineLayoutCreateFlags!` as an alternative method to create a structure. For example, these two snippets return the same value:
/// ```
/// VkPipelineLayoutCreateFlags!()
/// ```
/// ```
/// VkPipelineLayoutCreateFlags {
/// }
/// ```
#[derive(Debug, Clone)]
pub struct VkPipelineLayoutCreateFlags {
    
}

#[doc(hidden)]
pub type RawVkPipelineLayoutCreateFlags = u32;

impl VkWrappedType<RawVkPipelineLayoutCreateFlags> for VkPipelineLayoutCreateFlags {
    fn vk_to_raw(src: &VkPipelineLayoutCreateFlags, dst: &mut RawVkPipelineLayoutCreateFlags) {
        *dst = 0;
    }
}

impl VkRawType<VkPipelineLayoutCreateFlags> for RawVkPipelineLayoutCreateFlags {
    fn vk_to_wrapped(src: &RawVkPipelineLayoutCreateFlags) -> VkPipelineLayoutCreateFlags {
        VkPipelineLayoutCreateFlags {
            
        }
    }
}

impl Default for VkPipelineLayoutCreateFlags {
    fn default() -> VkPipelineLayoutCreateFlags {
        VkPipelineLayoutCreateFlags {
            
        }
    }
}

impl VkPipelineLayoutCreateFlags {
    
    /// Return a structure with all flags to `false`.
    pub fn none() -> Self {
        VkPipelineLayoutCreateFlags {
            
        }
    }
    
    /// Return a structure with all flags to `true`.
    pub fn all() -> Self {
        VkPipelineLayoutCreateFlags {
            
        }
    }
    
    /// Return the numerical bit flags corresponding to the structure (as described in the Vulkan specs).
    pub fn to_u32(&self) -> u32 {
        0
    }
    
    /// Create a structure corresponding to the specified numerical bit flags.
    pub fn from_u32(value: u32) -> Self {
        VkPipelineLayoutCreateFlags {
            
        }
    }
}

#[doc(hidden)]
#[macro_export]
macro_rules! VkPipelineLayoutCreateFlags {
    ( $( $x:ident ),* ) => {
        VkPipelineLayoutCreateFlags {
            $($x: true,)*
            ..VkPipelineLayoutCreateFlags::none()
        }
    }
}