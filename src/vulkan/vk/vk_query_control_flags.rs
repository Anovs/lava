// Generated by `scripts/generate.js`

use utils::vk_traits::*;

/// Wrapper for [VkQueryControlFlagBits](https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkQueryControlFlagBits.html)
///
/// Use the macro `VkQueryControlFlags!` as an alternative method to create a structure. For example, these two snippets return the same value:
/// ```
/// VkQueryControlFlags!(precise)
/// ```
/// ```
/// VkQueryControlFlags {
///     precise: true,
/// }
/// ```
#[derive(Debug, Clone, Copy)]
pub struct VkQueryControlFlags {
    pub precise: bool,
}

#[doc(hidden)]
pub type RawVkQueryControlFlags = u32;

impl VkWrappedType<RawVkQueryControlFlags> for VkQueryControlFlags {
    fn vk_to_raw(src: &VkQueryControlFlags, dst: &mut RawVkQueryControlFlags) {
        *dst = 0;
        if src.precise { *dst |= 0x00000001; }
    }
}

impl VkRawType<VkQueryControlFlags> for RawVkQueryControlFlags {
    fn vk_to_wrapped(src: &RawVkQueryControlFlags) -> VkQueryControlFlags {
        VkQueryControlFlags {
            precise: (src & 0x00000001) != 0,
        }
    }
}

impl Default for VkQueryControlFlags {
    fn default() -> VkQueryControlFlags {
        VkQueryControlFlags {
            precise: false,
        }
    }
}

impl VkQueryControlFlags {
    
    /// Return a structure with all flags to `false`.
    pub fn none() -> Self {
        VkQueryControlFlags {
            precise: false,
        }
    }
    
    /// Return a structure with all flags to `true`.
    pub fn all() -> Self {
        VkQueryControlFlags {
            precise: true,
        }
    }
    
    /// Return the numerical bit flags corresponding to the structure (as described in the Vulkan specs).
    pub fn to_u32(&self) -> u32 {
        0
        + if self.precise { 0x00000001 } else { 0 }
    }
    
    /// Create a structure corresponding to the specified numerical bit flags.
    pub fn from_u32(value: u32) -> Self {
        VkQueryControlFlags {
            precise: value & 0x00000001 > 0,
        }
    }
}

#[doc(hidden)]
#[macro_export]
macro_rules! VkQueryControlFlags {
    ( $( $x:ident ),* ) => {
        VkQueryControlFlags {
            $($x: true,)*
            ..VkQueryControlFlags::none()
        }
    }
}