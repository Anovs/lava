// Generated by `scripts/generate.js`

use utils::vk_traits::*;

#[repr(i32)]
#[derive(Debug, PartialEq, Copy, Clone)]
pub enum VkQueryType {
    Occlusion = 0,
    PipelineStatistics = 1,
    Timestamp = 2,
    TransformFeedbackStreamExt = 1000028004,
    AccelerationStructureCompactedSizeNv = 1000165000,
}

pub type RawVkQueryType = i32;

impl VkWrappedType<RawVkQueryType> for VkQueryType {
    fn vk_to_raw(src: &VkQueryType, dst: &mut RawVkQueryType) {
        *dst = *src as i32
    }
}

impl VkRawType<VkQueryType> for RawVkQueryType {
    fn vk_to_wrapped(src: &RawVkQueryType) -> VkQueryType {
        unsafe {
            *((src as *const i32) as *const VkQueryType)
        }
    }
}

impl Default for VkQueryType {
    fn default() -> VkQueryType {
        VkQueryType::Occlusion
    }
}